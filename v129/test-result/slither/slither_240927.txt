slither . > ./test-result/slither/slither_240927.txt 2>&1

'forge clean' running (wd: /Users/mac/coding/dashboard/dashboard-me/sc/v129)
'forge config --json' running
'forge build --build-info --skip */test/** */script/** --force' running (wd: /Users/mac/coding/dashboard/dashboard-me/sc/v129)
ERROR:ConvertToIR:Function not found symbol
ERROR:ContractSolcParsing:Impossible to generate IR for GiveUp129.donateWhiteListTokenToCampaign (src/GiveUp_129.sol#664-798):
 'NoneType' object has no attribute 'type'
INFO:Detectors:
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#123-202) has bitwise-xor operator ^ instead of the exponentiation operator **: 
	 - inverse = (3 * denominator) ^ 2 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#184)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-exponentiation
INFO:Detectors:
stdStorageSafe.getMaskByOffsets(uint256,uint256) (lib/forge-std/src/StdStorage.sol#316-322) contains an incorrect shift operation: mask = 1 << 256 - offsetRight + offsetLeft - 1 << offsetRight (lib/forge-std/src/StdStorage.sol#320)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-shift-in-assembly
INFO:Detectors:
StdCheats.vm (lib/forge-std/src/StdCheats.sol#643) shadows:
	- StdCheatsSafe.vm (lib/forge-std/src/StdCheats.sol#11)
ContributionNFT._name (src/ContributionNFT.sol#16) shadows:
	- ERC721._name (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#23)
ContributionNFT._symbol (src/ContributionNFT.sol#17) shadows:
	- ERC721._symbol (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing
INFO:Detectors:
GiveUp129.transferERC20(IERC20,address,uint256) (src/GiveUp_129.sol#400-411) ignores return value by token.transfer(to,amount) (src/GiveUp_129.sol#410)
TokenTemplate1.addInitialLiquidityETH_1() (src/TokenTemplate1.sol#261-286) ignores return value by IERC20(pair).transfer(address(this),IERC20(pair).balanceOf(address(this))) (src/TokenTemplate1.sol#282)
GiveUpLib2.performPayout(Campaign,MappingCampaignIdTo,PackedVars1,ContractFunded,address) (src/lib/GLib_Base2.sol#431-488) ignores return value by firstPriorityToken.transfer(address(address(resultToken)),campaign.cFunded.raisedFund.firstTokenFunded) (src/lib/GLib_Base2.sol#463)
GiveUpLib2.performPayout(Campaign,MappingCampaignIdTo,PackedVars1,ContractFunded,address) (src/lib/GLib_Base2.sol#431-488) ignores return value by secondPrioritytoken.transfer(address(address(resultToken)),campaign.cFunded.raisedFund.secondTokenFunded) (src/lib/GLib_Base2.sol#471)
GiveUpLib2.performPayout(Campaign,MappingCampaignIdTo,PackedVars1,ContractFunded,address) (src/lib/GLib_Base2.sol#431-488) ignores return value by thirdPriorityToken.transfer(address(address(resultToken)),campaign.cFunded.raisedFund.thirdTokenFunded) (src/lib/GLib_Base2.sol#479)
GiveUpLib2.singleRefund(PackedVars1,uint256,bool,Campaign,ContractFunded,MappingCampaignIdTo,mapping(address => string)) (src/lib/GLib_Base2.sol#989-1106) ignores return value by token.transfer(recipient,fund.qty) (src/lib/GLib_Base2.sol#1062)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
GiveUp129.rate (src/GiveUp_129.sol#109) is never initialized. It is used in:
	- GiveUp129.getRateDetail(uint256,uint256) (src/GiveUp_129.sol#1042-1044)
	- GiveUp129.getCampaignRateDetail(uint256,uint256) (src/GiveUp_129.sol#1104-1106)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables
INFO:Detectors:
Base64.encode(bytes) (lib/openzeppelin-contracts/contracts/utils/Base64.sol#18-98) performs a multiplication on the result of a division:
	- result = new string(4 * ((data.length + 2) / 3)) (lib/openzeppelin-contracts/contracts/utils/Base64.sol#34)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#123-202) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#169)
	- inverse = (3 * denominator) ^ 2 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#184)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#123-202) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#169)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#188)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#123-202) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#169)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#189)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#123-202) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#169)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#190)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#123-202) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#169)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#191)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#123-202) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#169)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#192)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#123-202) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#169)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#193)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#123-202) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#172)
	- result = prod0 * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#199)
TokenTemplate1.constructor(string,string,address,address,CampaignNoBacker,Alchemist) (src/TokenTemplate1.sol#130-229) performs a multiplication on the result of a division:
	- shareAmt = (sharePct * backers_initial_token_supply) / 100 (src/TokenTemplate1.sol#203)
	- sharePct = (sharePctBeforeDeducting * thisCampaign.cId.pctForBackers) / 100 (src/TokenTemplate1.sol#208)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
IERC20 (src/GiveUp_129.sol#38-43) has incorrect ERC20 function interface:IERC20.transfer(address,uint256) (src/GiveUp_129.sol#41)
IERC20 (src/GiveUp_129.sol#38-43) has incorrect ERC20 function interface:IERC20.transferFrom(address,address,uint256) (src/GiveUp_129.sol#42)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface
INFO:Detectors:
TokenTemplate1.addInitialLiquidityETH_1() (src/TokenTemplate1.sol#261-286) uses a dangerous strict equality:
	- require(bool,string)(INITIAL_SUPPLY == IERC20(address(this)).balanceOf(address(this)),Initial supply must be minted already) (src/TokenTemplate1.sol#264)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Contract locking ether found:
	Contract MockERC721 (lib/forge-std/src/mocks/MockERC721.sol#8-231) has payable functions:
	 - IERC721.safeTransferFrom(address,address,uint256,bytes) (lib/forge-std/src/interfaces/IERC721.sol#53)
	 - IERC721.safeTransferFrom(address,address,uint256) (lib/forge-std/src/interfaces/IERC721.sol#61)
	 - IERC721.transferFrom(address,address,uint256) (lib/forge-std/src/interfaces/IERC721.sol#73)
	 - IERC721.approve(address,uint256) (lib/forge-std/src/interfaces/IERC721.sol#81)
	 - MockERC721.approve(address,uint256) (lib/forge-std/src/mocks/MockERC721.sol#83-91)
	 - MockERC721.transferFrom(address,address,uint256) (lib/forge-std/src/mocks/MockERC721.sol#99-120)
	 - MockERC721.safeTransferFrom(address,address,uint256) (lib/forge-std/src/mocks/MockERC721.sol#122-131)
	 - MockERC721.safeTransferFrom(address,address,uint256,bytes) (lib/forge-std/src/mocks/MockERC721.sol#133-147)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether
INFO:Detectors:
Reentrancy in ContributionNFT.mintNFT(address,uint256,string) (src/ContributionNFT.sol#45-51):
	External calls:
	- _safeMint(to,tokenId) (src/ContributionNFT.sol#47)
		- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,data) (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#467-480)
	State variables written after the call(s):
	- _nextTokenId ++ (src/ContributionNFT.sol#49)
	ContributionNFT._nextTokenId (src/ContributionNFT.sol#15) can be used in cross function reentrancies:
	- ContributionNFT.getContributionInfo(uint256) (src/ContributionNFT.sol#70-74)
	- ContributionNFT.mintNFT(address,uint256,string) (src/ContributionNFT.sol#45-51)
	- ContributionNFT.tokenURI(uint256) (src/ContributionNFT.sol#53-68)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
GiveUp129.createCampaign(uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,address) (src/GiveUp_129.sol#424-478) contains a tautology or contradiction:
	- require(bool,string)(0 <= _pctForBackers && _pctForBackers <= 100,_pctForBackers Invalid percentage) (src/GiveUp_129.sol#436)
GiveUp129.createCampaign(uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,address) (src/GiveUp_129.sol#424-478) contains a tautology or contradiction:
	- require(bool,string)(0 <= _haveFundTarget && _haveFundTarget <= 100,_haveFundTarget Invalid percentage) (src/GiveUp_129.sol#435)
GiveUp129.updateCampaign(uint256,uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[]) (src/GiveUp_129.sol#480-511) contains a tautology or contradiction:
	- require(bool,string)(0 <= _haveFundTarget && _haveFundTarget <= 100,_haveFundTarget Invalid percentage) (src/GiveUp_129.sol#492)
GiveUp129.updateCampaign(uint256,uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[]) (src/GiveUp_129.sol#480-511) contains a tautology or contradiction:
	- require(bool,string)(0 <= _pctForBackers && _pctForBackers <= 100,_pctForBackers Invalid percentage) (src/GiveUp_129.sol#493)
GiveUp129.donateToCampaign(uint256,uint256,uint256) (src/GiveUp_129.sol#556-661) contains a tautology or contradiction:
	- require(bool,string)(_option >= 0 && _option <= 4,Invalid option) (src/GiveUp_129.sol#567)
GiveUp129.donateWhiteListTokenToCampaign(uint256,uint256,uint256,address,uint256) (src/GiveUp_129.sol#664-798) contains a tautology or contradiction:
	- require(bool,string)(_option >= 0 && _option <= 4,Invalid option) (src/GiveUp_129.sol#673)
GiveUp129.changeTax(uint256) (src/GiveUp_129.sol#913-917) contains a tautology or contradiction:
	- require(bool,string)(_taxPct >= 0 && _taxPct <= 100,Invalid percentage) (src/GiveUp_129.sol#914)
TokenTemplate1.constructor(string,string,address,address,CampaignNoBacker,Alchemist) (src/TokenTemplate1.sol#130-229) contains a tautology or contradiction:
	- 0 <= thisCampaign.cId.haveFundTarget && thisCampaign.cId.haveFundTarget < 100 (src/TokenTemplate1.sol#168)
GiveUpLib1.checkFundedTarget(Campaign) (src/lib/GLib_Base1.sol#119-225) contains a tautology or contradiction:
	- (campaign.cFunded.raisedFund.amtFunded < campaign.cFunded.raisedFund.target && campaign.cFunded.raisedFund.amtFunded >= 0) && (campaign.cFunded.raisedFund.firstTokenFunded < campaign.cFunded.raisedFund.firstTokenTarget && campaign.cFunded.raisedFund.firstTokenFunded >= 0) && (campaign.cFunded.raisedFund.secondTokenFunded < campaign.cFunded.raisedFund.secondTokenTarget && campaign.cFunded.raisedFund.secondTokenFunded >= 0) && (campaign.cFunded.raisedFund.thirdTokenFunded < campaign.cFunded.raisedFund.thirdTokenTarget && campaign.cFunded.raisedFund.thirdTokenFunded >= 0) && (campaign.cFunded.raisedFund.equivalentUSDFunded < campaign.cFunded.raisedFund.equivalentUSDTarget && campaign.cFunded.raisedFund.equivalentUSDFunded >= 0) (src/lib/GLib_Base1.sol#145-164)
GiveUpLib1.deployTimeLock(Campaign,PackedVars1) (src/lib/GLib_Base1.sol#500-552) contains a tautology or contradiction:
	- require(bool,string)(packedVars1.uintVars[1] == BACKER_WITHDRAW_ALL_CODE || (0 <= packedVars1.uintVars[1] && packedVars1.uintVars[1] <= 4),invalid vote option) (src/lib/GLib_Base1.sol#504-508)
GiveUpLib1.deployTimeLock(Campaign,PackedVars1) (src/lib/GLib_Base1.sol#500-552) contains a tautology or contradiction:
	- 0 <= packedVars1.uintVars[1] && packedVars1.uintVars[1] <= 4 (src/lib/GLib_Base1.sol#532)
GiveUpLib2.removeOptionsVoted(uint256,uint256,mapping(uint256 => mapping(address => mapping(uint256 => VoteData))),mapping(uint256 => mapping(uint256 => address)),Campaign) (src/lib/GLib_Base2.sol#570-658) contains a tautology or contradiction:
	- 0 <= _voteOption && _voteOption <= 4 (src/lib/GLib_Base2.sol#578)
GiveUpLib2.performRefund(PackedVars1,Campaign,string,ContractFunded,MappingCampaignIdTo,mapping(address => string)) (src/lib/GLib_Base2.sol#867-986) contains a tautology or contradiction:
	- 0 <= packedVars1.uintVars[1] && packedVars1.uintVars[1] <= 4 (src/lib/GLib_Base2.sol#931)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction
INFO:Detectors:
StdCheatsSafe.rawToConvertedReceipt(StdCheatsSafe.RawReceipt).receipt (lib/forge-std/src/StdCheats.sol#449) is a local variable never initialized
StdCheatsSafe.rawToConvertedEIP1559Detail(StdCheatsSafe.RawTx1559Detail).txDetail (lib/forge-std/src/StdCheats.sol#397) is a local variable never initialized
StdCheatsSafe.readEIP1559ScriptArtifact(string).artifact (lib/forge-std/src/StdCheats.sol#361) is a local variable never initialized
stdStorageSafe.root(StdStorage).root_slot (lib/forge-std/src/StdStorage.sol#267) is a local variable never initialized
GiveUpLib1.deployTimeLock(Campaign,PackedVars1).lastTimeLockStatus (src/lib/GLib_Base1.sol#515) is a local variable never initialized
StdCheatsSafe.rawToConvertedEIPTx1559(StdCheatsSafe.RawTx1559).transaction (lib/forge-std/src/StdCheats.sol#381) is a local variable never initialized
GiveUpLib1.deployTimeLock(Campaign,PackedVars1).timeLockFound (src/lib/GLib_Base1.sol#513) is a local variable never initialized
GiveUp129.deleteCampaign(uint256).packedVars1 (src/GiveUp_129.sol#520) is a local variable never initialized
GiveUp129.payOutCampaign(uint256).packedVars1 (src/GiveUp_129.sol#866) is a local variable never initialized
TokenTemplate1.constructor(string,string,address,address,CampaignNoBacker,Alchemist).sharePct (src/TokenTemplate1.sol#197) is a local variable never initialized
GiveUp129.requestRefund(uint256,bool,uint256).packedVars1 (src/GiveUp_129.sol#811) is a local variable never initialized
TokenTemplate1.removeInitialLiquidity(address).feeAccrued (src/TokenTemplate1.sol#446) is a local variable never initialized
TokenTemplate1.constructor(string,string,address,address,CampaignNoBacker,Alchemist).shareAmt (src/TokenTemplate1.sol#198) is a local variable never initialized
TokenTemplate1.removeInitialLiquidity(address).lockPeriod (src/TokenTemplate1.sol#440) is a local variable never initialized
GiveUpLib1.deployTimeLock(Campaign,PackedVars1).latestTimeLockIndex (src/lib/GLib_Base1.sol#514) is a local variable never initialized
GiveUpLib2.requestRefund(PackedVars1,Campaign,mapping(uint256 => mapping(address => mapping(uint256 => VoteData))),ContractFunded,MappingCampaignIdTo,mapping(address => string),mapping(uint256 => mapping(uint256 => address))).totalNumber (src/lib/GLib_Base2.sol#710) is a local variable never initialized
GiveUpLib1.deployTimeLock(Campaign,PackedVars1).refundListCounter (src/lib/GLib_Base1.sol#512) is a local variable never initialized
TokenTemplate1.removeInitialLiquidity(address).liquidity (src/TokenTemplate1.sol#445) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
stdStorageSafe.find(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#106-169) ignores return value by (reads,None) = vm.accesses(address(who)) (lib/forge-std/src/StdStorage.sol#121)
stdStorageSafe.root(StdStorage) (lib/forge-std/src/StdStorage.sol#261-280) ignores return value by (found,None,parent_slot) = vm.getMappingKeyAndParentOf(who,bytes32(child)) (lib/forge-std/src/StdStorage.sol#269)
stdStorageSafe.root(StdStorage) (lib/forge-std/src/StdStorage.sol#261-280) ignores return value by (found,None,parent_slot) = vm.getMappingKeyAndParentOf(who,bytes32(root_slot)) (lib/forge-std/src/StdStorage.sol#277)
stdStorage.parent(StdStorage) (lib/forge-std/src/StdStorage.sol#466-468) ignores return value by stdStorageSafe.parent(self) (lib/forge-std/src/StdStorage.sol#467)
StdUtils.getTokenBalances(address,address[]) (lib/forge-std/src/StdUtils.sol#151-178) ignores return value by (None,returnData) = multicall.aggregate(calls) (lib/forge-std/src/StdUtils.sol#171)
StdCheatsSafe.isFork() (lib/forge-std/src/StdCheats.sol#576-580) ignores return value by vm.activeFork() (lib/forge-std/src/StdCheats.sol#577-579)
ERC1967Utils.upgradeToAndCall(address,bytes) (lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol#83-92) ignores return value by Address.functionDelegateCall(newImplementation,data) (lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol#88)
ERC1967Utils.upgradeBeaconToAndCall(address,bytes) (lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol#173-182) ignores return value by Address.functionDelegateCall(IBeacon(newBeacon).implementation(),data) (lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol#178)
GiveUp129.removeWhiteListToken(address) (src/GiveUp_129.sol#366-389) ignores return value by (None,index) = GiveUpLib1.findAddressIndex(_tokenAddress,WLAddresses,new address[](0)) (src/GiveUp_129.sol#386)
GiveUp129.deleteCampaign(uint256) (src/GiveUp_129.sol#519-550) ignores return value by GiveUpLib2.requestRefund(packedVars1,campaigns[_id],campaignOptionsVoted,contractFundedInfo,mappingCId[_id],tokenAddrToPriority,campaignVoter) (src/GiveUp_129.sol#531-544)
GiveUp129.donateToCampaign(uint256,uint256,uint256) (src/GiveUp_129.sol#556-661) ignores return value by GiveUpLib2.addOptionsVoted(_id,_option,i_nativeTokenSymbol,campaignOptionsVoted,campaignVoter,campaign) (src/GiveUp_129.sol#586)
GiveUp129.getCampaignContributionsFromBacker(uint256,address,bool) (src/GiveUp_129.sol#1071-1077) ignores return value by GiveUpLib1.getCampaignContributionsFromBacker(campaigns[_id],_backer,_refunded) (src/GiveUp_129.sol#1076)
TokenTemplate1.addInitialLiquidityETH_1() (src/TokenTemplate1.sol#261-286) ignores return value by IERC20(address(this)).approve(UNISWAP_V2_ROUTER,tokenAmount) (src/TokenTemplate1.sol#266)
TokenTemplate1.swapWLTokenToNativeToken(address,uint256) (src/TokenTemplate1.sol#376-404) ignores return value by IERC20(_tokenAddr).approve(address(uniswapV2Router02),_amount) (src/TokenTemplate1.sol#390)
TokenTemplate1.swapWLTokenToNativeToken(address,uint256) (src/TokenTemplate1.sol#376-404) ignores return value by IUniswapV2Router02(uniswapV2Router02).swapExactTokensForETH(_amount,0,path,address(this),block.timestamp + 900) (src/TokenTemplate1.sol#392-394)
TokenTemplate1.getBackerNativeTokenContribution(address) (src/TokenTemplate1.sol#411-413) ignores return value by giveUpMainContract.getBackerNativeTokenContribution(_backerAddr,thisCampaign.cId.id) (src/TokenTemplate1.sol#412)
TokenTemplate1.removeInitialLiquidity(address) (src/TokenTemplate1.sol#432-537) ignores return value by IERC20(pair).approve(address(uniswapV2Router02),liquidity) (src/TokenTemplate1.sol#490)
TokenTemplate1.claimNFT(address) (src/TokenTemplate1.sol#545-564) ignores return value by contributionNFT.mintNFT(to,amount,participantType) (src/TokenTemplate1.sol#561)
GiveUpLib2.performPayout(Campaign,MappingCampaignIdTo,PackedVars1,ContractFunded,address) (src/lib/GLib_Base2.sol#431-488) ignores return value by firstPriorityToken.approve(address(address(resultToken)),campaign.cFunded.raisedFund.firstTokenFunded) (src/lib/GLib_Base2.sol#462)
GiveUpLib2.performPayout(Campaign,MappingCampaignIdTo,PackedVars1,ContractFunded,address) (src/lib/GLib_Base2.sol#431-488) ignores return value by secondPrioritytoken.approve(address(address(resultToken)),campaign.cFunded.raisedFund.secondTokenFunded) (src/lib/GLib_Base2.sol#470)
GiveUpLib2.performPayout(Campaign,MappingCampaignIdTo,PackedVars1,ContractFunded,address) (src/lib/GLib_Base2.sol#431-488) ignores return value by thirdPriorityToken.approve(address(address(resultToken)),campaign.cFunded.raisedFund.thirdTokenFunded) (src/lib/GLib_Base2.sol#478)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
TokenTemplate1.constructor(string,string,address,address,CampaignNoBacker,Alchemist)._name (src/TokenTemplate1.sol#131) shadows:
	- ERC20._name (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#41) (state variable)
TokenTemplate1.constructor(string,string,address,address,CampaignNoBacker,Alchemist)._symbol (src/TokenTemplate1.sol#132) shadows:
	- ERC20._symbol (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#42) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
TokenTemplate1.transferOperator(address) (src/TokenTemplate1.sol#251-253) should emit an event for: 
	- operator = _newOperator (src/TokenTemplate1.sol#252) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control
INFO:Detectors:
TokenTemplate1.constructor(string,string,address,address,CampaignNoBacker,Alchemist)._giveUpMainContract (src/TokenTemplate1.sol#133) lacks a zero-check on :
		- i_contractOwner = _giveUpMainContract (src/TokenTemplate1.sol#139)
TokenTemplate1.constructor(string,string,address,address,CampaignNoBacker,Alchemist)._operator (src/TokenTemplate1.sol#134) lacks a zero-check on :
		- operator = _operator (src/TokenTemplate1.sol#141)
TokenTemplate1.transferOperator(address)._newOperator (src/TokenTemplate1.sol#251) lacks a zero-check on :
		- operator = _newOperator (src/TokenTemplate1.sol#252)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
Modifier StdCheatsSafe.skipWhenForking() (lib/forge-std/src/StdCheats.sol#582-586) does not always execute _; or revert
Modifier StdCheatsSafe.skipWhenNotForking() (lib/forge-std/src/StdCheats.sol#588-592) does not always execute _; or revert
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier
INFO:Detectors:
TokenTemplate1.getBackerNativeTokenContribution(address) (src/TokenTemplate1.sol#411-413) has external calls inside a loop: giveUpMainContract.getBackerNativeTokenContribution(_backerAddr,thisCampaign.cId.id) (src/TokenTemplate1.sol#412)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in TokenTemplate1.addInitialLiquidityETH_1() (src/TokenTemplate1.sol#261-286):
	External calls:
	- IERC20(address(this)).approve(UNISWAP_V2_ROUTER,tokenAmount) (src/TokenTemplate1.sol#266)
	- (amountToken,amountETH,liquidity) = IUniswapV2Router01(UNISWAP_V2_ROUTER).addLiquidityETH{value: msg.value}(address(this),tokenAmount,tokenAmount,msg.value,address(this),block.timestamp + 900) (src/TokenTemplate1.sol#267-275)
	External calls sending eth:
	- (amountToken,amountETH,liquidity) = IUniswapV2Router01(UNISWAP_V2_ROUTER).addLiquidityETH{value: msg.value}(address(this),tokenAmount,tokenAmount,msg.value,address(this),block.timestamp + 900) (src/TokenTemplate1.sol#267-275)
	State variables written after the call(s):
	- lp.initialLiq = liquidity (src/TokenTemplate1.sol#277)
	- lp.initialLiqRemain = liquidity (src/TokenTemplate1.sol#278)
Reentrancy in StdAssertions.fail() (lib/forge-std/src/StdAssertions.sol#46-49):
	External calls:
	- vm.store(address(vm),bytes32(failed),bytes32(uint256(1))) (lib/forge-std/src/StdAssertions.sol#47)
	State variables written after the call(s):
	- _failed = true (lib/forge-std/src/StdAssertions.sol#48)
Reentrancy in ContributionNFT.mintNFT(address,uint256,string) (src/ContributionNFT.sol#45-51):
	External calls:
	- _safeMint(to,tokenId) (src/ContributionNFT.sol#47)
		- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,data) (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#467-480)
	State variables written after the call(s):
	- _contributions[tokenId] = Contribution(to,amount,block.timestamp,participantType) (src/ContributionNFT.sol#48)
Reentrancy in StdCheatsSafe.noGasMetering() (lib/forge-std/src/StdCheats.sol#594-613):
	External calls:
	- vm.pauseGasMetering() (lib/forge-std/src/StdCheats.sol#595)
	State variables written after the call(s):
	- gasMeteringOff = true (lib/forge-std/src/StdCheats.sol#604)
	- gasMeteringOff = false (lib/forge-std/src/StdCheats.sol#610)
Reentrancy in TokenTemplate1.removeInitialLiquidity(address) (src/TokenTemplate1.sol#432-537):
	External calls:
	- IERC20(pair).approve(address(uniswapV2Router02),liquidity) (src/TokenTemplate1.sol#490)
	- (amountToken,amountETH) = uniswapV2Router02.removeLiquidityETH(address(this),liquidity,0,0,address(this),block.timestamp + 900) (src/TokenTemplate1.sol#492-499)
	State variables written after the call(s):
	- nativeTokenAccrued.fromInitialLP += feeAccrued (src/TokenTemplate1.sol#514)
Reentrancy in TokenTemplate1.removeInitialLiquidity(address) (src/TokenTemplate1.sol#432-537):
	External calls:
	- IERC20(pair).approve(address(uniswapV2Router02),liquidity) (src/TokenTemplate1.sol#490)
	- (amountToken,amountETH) = uniswapV2Router02.removeLiquidityETH(address(this),liquidity,0,0,address(this),block.timestamp + 900) (src/TokenTemplate1.sol#492-499)
	- (success,None) = participant.call{value: amountETH}() (src/TokenTemplate1.sol#524)
	External calls sending eth:
	- (success,None) = participant.call{value: amountETH}() (src/TokenTemplate1.sol#524)
	State variables written after the call(s):
	- _burn(address(this),amountToken) (src/TokenTemplate1.sol#528)
		- _balances[from] = fromBalance - value (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#199)
		- _balances[to] += value (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#211)
	- _burn(address(this),amountToken) (src/TokenTemplate1.sol#528)
		- _totalSupply += value (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#191)
		- _totalSupply -= value (lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#206)
Reentrancy in TokenTemplate1.swapWLTokenToNativeToken(address,uint256) (src/TokenTemplate1.sol#376-404):
	External calls:
	- IERC20(_tokenAddr).approve(address(uniswapV2Router02),_amount) (src/TokenTemplate1.sol#390)
	- IUniswapV2Router02(uniswapV2Router02).swapExactTokensForETH(_amount,0,path,address(this),block.timestamp + 900) (src/TokenTemplate1.sol#392-394)
	State variables written after the call(s):
	- nativeTokenAccrued.fromWLTokens += ethReceived (src/TokenTemplate1.sol#401)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in TokenTemplate1.addInitialLiquidityETH_1() (src/TokenTemplate1.sol#261-286):
	External calls:
	- IERC20(address(this)).approve(UNISWAP_V2_ROUTER,tokenAmount) (src/TokenTemplate1.sol#266)
	- (amountToken,amountETH,liquidity) = IUniswapV2Router01(UNISWAP_V2_ROUTER).addLiquidityETH{value: msg.value}(address(this),tokenAmount,tokenAmount,msg.value,address(this),block.timestamp + 900) (src/TokenTemplate1.sol#267-275)
	- IERC20(pair).transfer(address(this),IERC20(pair).balanceOf(address(this))) (src/TokenTemplate1.sol#282)
	External calls sending eth:
	- (amountToken,amountETH,liquidity) = IUniswapV2Router01(UNISWAP_V2_ROUTER).addLiquidityETH{value: msg.value}(address(this),tokenAmount,tokenAmount,msg.value,address(this),block.timestamp + 900) (src/TokenTemplate1.sol#267-275)
	Event emitted after the call(s):
	- InitialLiquidityAdded(amountToken,amountETH,liquidity) (src/TokenTemplate1.sol#284)
Reentrancy in StdAssertions.assertEqCall(address,bytes,address,bytes,bool) (lib/forge-std/src/StdAssertions.sol#637-668):
	External calls:
	- (successA,returnDataA) = address(targetA).call(callDataA) (lib/forge-std/src/StdAssertions.sol#644)
	- (successB,returnDataB) = address(targetB).call(callDataB) (lib/forge-std/src/StdAssertions.sol#645)
	Event emitted after the call(s):
	- log(Error: Calls were not equal) (lib/forge-std/src/StdAssertions.sol#656)
	- log(Error: Calls were not equal) (lib/forge-std/src/StdAssertions.sol#663)
	- log_named_bytes(  Left call revert data,returnDataA) (lib/forge-std/src/StdAssertions.sol#657)
	- log_named_bytes( Right call return data,returnDataB) (lib/forge-std/src/StdAssertions.sol#658)
	- log_named_bytes(  Left call return data,returnDataA) (lib/forge-std/src/StdAssertions.sol#664)
	- log_named_bytes( Right call revert data,returnDataB) (lib/forge-std/src/StdAssertions.sol#665)
Reentrancy in stdStorageSafe.find(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#106-169):
	External calls:
	- vm.record() (lib/forge-std/src/StdStorage.sol#119)
	- (reads,None) = vm.accesses(address(who)) (lib/forge-std/src/StdStorage.sol#121)
	- ! checkSlotMutatesCall(self,reads[i]) (lib/forge-std/src/StdStorage.sol#132)
		- vm.store(self._target,slot,testVal) (lib/forge-std/src/StdStorage.sol#60)
		- vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#64)
	- (found,offsetLeft,offsetRight) = findOffsets(self,reads[i]) (lib/forge-std/src/StdStorage.sol#140)
		- vm.store(self._target,slot,bytes32(valueToPut)) (lib/forge-std/src/StdStorage.sol#74)
		- vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#92)
	Event emitted after the call(s):
	- SlotFound(who,fsig,keccak256(bytes)(abi.encodePacked(params,field_depth)),uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#153)
	- WARNING_UninitedSlot(who,uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#129)
Reentrancy in stdStorageSafe.parent(StdStorage) (lib/forge-std/src/StdStorage.sol#247-259):
	External calls:
	- vm.startMappingRecording() (lib/forge-std/src/StdStorage.sol#250)
	- child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#251)
		- vm.store(self._target,slot,bytes32(valueToPut)) (lib/forge-std/src/StdStorage.sol#74)
		- vm.store(self._target,slot,testVal) (lib/forge-std/src/StdStorage.sol#60)
		- vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#92)
		- vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#64)
		- vm.record() (lib/forge-std/src/StdStorage.sol#119)
		- (reads,None) = vm.accesses(address(who)) (lib/forge-std/src/StdStorage.sol#121)
	Event emitted after the call(s):
	- SlotFound(who,fsig,keccak256(bytes)(abi.encodePacked(params,field_depth)),uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#153)
		- child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#251)
	- WARNING_UninitedSlot(who,uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#129)
		- child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#251)
Reentrancy in GiveUpLib2.requestRefund(PackedVars1,Campaign,mapping(uint256 => mapping(address => mapping(uint256 => VoteData))),ContractFunded,MappingCampaignIdTo,mapping(address => string),mapping(uint256 => mapping(uint256 => address))) (src/lib/GLib_Base2.sol#665-852):
	External calls:
	- (totalNumber,None,None) = performRefund(packedVars1,campaign,REVERTING,contractFundedInfo,cIdTo,tokenAddrToPriority) (src/lib/GLib_Base2.sol#717-729)
		- (success,None) = address(recipient).call{value: fund.qty}() (src/lib/GLib_Base2.sol#1029)
		- token.transfer(recipient,fund.qty) (src/lib/GLib_Base2.sol#1062)
	- (totalNumber,isTimelockForRefund,returnTimeLockStatus) = performRefund(packedVars1,campaign,EARLY_WITHDRAW,contractFundedInfo,cIdTo,tokenAddrToPriority) (src/lib/GLib_Base2.sol#734-746)
		- (success,None) = address(recipient).call{value: fund.qty}() (src/lib/GLib_Base2.sol#1029)
		- token.transfer(recipient,fund.qty) (src/lib/GLib_Base2.sol#1062)
	- (totalNumber,None,None) = performRefund(packedVars1,campaign,DELETED,contractFundedInfo,cIdTo,tokenAddrToPriority) (src/lib/GLib_Base2.sol#816-828)
		- (success,None) = address(recipient).call{value: fund.qty}() (src/lib/GLib_Base2.sol#1029)
		- token.transfer(recipient,fund.qty) (src/lib/GLib_Base2.sol#1062)
	External calls sending eth:
	- (totalNumber,None,None) = performRefund(packedVars1,campaign,REVERTING,contractFundedInfo,cIdTo,tokenAddrToPriority) (src/lib/GLib_Base2.sol#717-729)
		- (success,None) = address(recipient).call{value: fund.qty}() (src/lib/GLib_Base2.sol#1029)
	- (totalNumber,isTimelockForRefund,returnTimeLockStatus) = performRefund(packedVars1,campaign,EARLY_WITHDRAW,contractFundedInfo,cIdTo,tokenAddrToPriority) (src/lib/GLib_Base2.sol#734-746)
		- (success,None) = address(recipient).call{value: fund.qty}() (src/lib/GLib_Base2.sol#1029)
	- (totalNumber,None,None) = performRefund(packedVars1,campaign,DELETED,contractFundedInfo,cIdTo,tokenAddrToPriority) (src/lib/GLib_Base2.sol#816-828)
		- (success,None) = address(recipient).call{value: fund.qty}() (src/lib/GLib_Base2.sol#1029)
	Event emitted after the call(s):
	- GiveUpLib1.GeneralMsg(string(abi.encodePacked(SUCCESSFULLY REFUND cId ,toString(packedVars1.uintVars[0]),, msg.sender: ,convertAddressToString(msg.sender),, timestamp: ,toString(block.timestamp)))) (src/lib/GLib_Base2.sol#836-847)
Reentrancy in stdStorageSafe.root(StdStorage) (lib/forge-std/src/StdStorage.sol#261-280):
	External calls:
	- vm.startMappingRecording() (lib/forge-std/src/StdStorage.sol#264)
	- child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#265)
		- vm.store(self._target,slot,bytes32(valueToPut)) (lib/forge-std/src/StdStorage.sol#74)
		- vm.store(self._target,slot,testVal) (lib/forge-std/src/StdStorage.sol#60)
		- vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#92)
		- vm.store(self._target,slot,prevSlotValue) (lib/forge-std/src/StdStorage.sol#64)
		- vm.record() (lib/forge-std/src/StdStorage.sol#119)
		- (reads,None) = vm.accesses(address(who)) (lib/forge-std/src/StdStorage.sol#121)
	Event emitted after the call(s):
	- SlotFound(who,fsig,keccak256(bytes)(abi.encodePacked(params,field_depth)),uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#153)
		- child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#265)
	- WARNING_UninitedSlot(who,uint256(reads[i])) (lib/forge-std/src/StdStorage.sol#129)
		- child = find(self,true).slot - field_depth (lib/forge-std/src/StdStorage.sol#265)
Reentrancy in TokenTemplate1.swapWLTokenToNativeToken(address,uint256) (src/TokenTemplate1.sol#376-404):
	External calls:
	- IERC20(_tokenAddr).approve(address(uniswapV2Router02),_amount) (src/TokenTemplate1.sol#390)
	- IUniswapV2Router02(uniswapV2Router02).swapExactTokensForETH(_amount,0,path,address(this),block.timestamp + 900) (src/TokenTemplate1.sol#392-394)
	Event emitted after the call(s):
	- TokenSwappedForETH(_tokenAddr,_amount,ethReceived) (src/TokenTemplate1.sol#403)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
MockERC20.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (lib/forge-std/src/mocks/MockERC20.sol#123-158) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(deadline >= block.timestamp,PERMIT_DEADLINE_EXPIRED) (lib/forge-std/src/mocks/MockERC20.sol#127)
GiveUp129.raiserChangeAlchemist(uint256,address) (src/GiveUp_129.sol#209-219) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(campaigns[_id].cInfo.startAt > block.timestamp,Can not propose Alchemist after campaign start) (src/GiveUp_129.sol#211)
GiveUp129.turnOffCommunityProposeAlchemist(uint256) (src/GiveUp_129.sol#224-231) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(campaigns[_id].cInfo.startAt > block.timestamp,Raiser can't turn off community propose Alchemist option after campaign start) (src/GiveUp_129.sol#226-229)
GiveUp129.donateToCampaign(uint256,uint256,uint256) (src/GiveUp_129.sol#556-661) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)((campaign.cStatus.campaignStatus == campaignStatusEnum.OPEN && block.timestamp <= campaign.cInfo.deadline && block.timestamp >= campaign.cInfo.startAt) || campaign.cStatus.campaignStatus == campaignStatusEnum.APPROVED_UNLIMITED,string(abi.encodePacked(Campaign' status: ,GiveUpLib1.campaignStatusToString(campaign.cStatus.campaignStatus), -> Campaign can NOT be donated.))) (src/GiveUp_129.sol#569-581)
GiveUp129.donateWhiteListTokenToCampaign(uint256,uint256,uint256,address,uint256) (src/GiveUp_129.sol#664-798) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)((campaign.cStatus.campaignStatus == campaignStatusEnum.OPEN && block.timestamp <= campaign.cInfo.deadline && block.timestamp >= campaign.cInfo.startAt) || campaign.cStatus.campaignStatus == campaignStatusEnum.APPROVED_UNLIMITED,string(abi.encodePacked(Campaign' status: ,GiveUpLib1.campaignStatusToString(campaigns[_id].cStatus.campaignStatus), -> Campaign can NOT be donated.))) (src/GiveUp_129.sol#675-687)
TokenTemplate1.addInitialLiquidityETH_1() (src/TokenTemplate1.sol#261-286) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(liquidity > 0,Liquidity not created) (src/TokenTemplate1.sol#279)
TokenTemplate1.claimTokenToBacker(address) (src/TokenTemplate1.sol#294-325) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(alchemistShare.shareAmt > 0,Amount token for alchemist is 0) (src/TokenTemplate1.sol#302)
	- require(bool,string)(alchemistShare.shareAmt <= INITIAL_SUPPLY,Amount token for alchemist is greater than INITIAL_SUPPLY !?) (src/TokenTemplate1.sol#303-306)
	- require(bool,string)(! alchemistShare.isWithdrawn,Alchemist already claimed) (src/TokenTemplate1.sol#307)
TokenTemplate1.raiserWithdrawDonationCampaignFunds() (src/TokenTemplate1.sol#332-352) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(! raiserShare.isWithdrawn,Raiser already withdrawn) (src/TokenTemplate1.sol#334)
TokenTemplate1.removeInitialLiquidity(address) (src/TokenTemplate1.sol#432-537) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(! raiserShare.isWithdrawn,Raiser already withdrawn) (src/TokenTemplate1.sol#449)
	- require(bool,string)(! alchemistShare.isWithdrawn,Alchemist already withdrawn) (src/TokenTemplate1.sol#454)
	- require(bool,string)(lockPeriod >= ALCHEMIST_LOCK_PERIOD,Alchemist must wait for 30 days before withdrawing liquidity as service payment) (src/TokenTemplate1.sol#460-463)
	- require(bool,string)(sharePct > 0,No share percentage) (src/TokenTemplate1.sol#479)
	- require(bool,string)(liquidity > 0,Insufficient liquidity) (src/TokenTemplate1.sol#488)
	- require(bool,string)(amountToken > 0 && amountETH > 0,Removal failed) (src/TokenTemplate1.sol#501)
	- lockPeriod < BACKER_SAFE_LOCK_PERIOD (src/TokenTemplate1.sol#508)
	- amountETH >= amtBackerContributed (src/TokenTemplate1.sol#509)
	- require(bool,string)(success,ETH transfer failed) (src/TokenTemplate1.sol#525)
TokenTemplate1._safeMint(address,uint256) (src/TokenTemplate1.sol#573-592) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(totalSupply() + amount <= MAX_SUPPLY,Exceeds maximum supply) (src/TokenTemplate1.sol#575)
	- require(bool,string)(totalSupply() <= MAX_SUPPLY,Minting exceeds maximum supply) (src/TokenTemplate1.sol#591)
GiveUpLib1.checkDeletableCampaign(Campaign,address) (src/lib/GLib_Base1.sol#230-268) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(((campaign.cStatus.campaignStatus == campaignStatusEnum.OPEN && ((campaign.cInfo.deadline < block.timestamp && checkFundedTarget(campaign) == 4) || (campaign.cFunded.raisedFund.totalDonating == 0 && campaign.cFunded.voterCount == 0))) || campaign.cStatus.campaignStatus == campaignStatusEnum.DRAFT || msg.sender == contractOwner),string(abi.encodePacked(Campaign' status: ,campaignStatusToString(campaign.cStatus.campaignStatus), -> Campaign can not be DELETED from now on except platform's operator!!!))) (src/lib/GLib_Base1.sol#244-265)
GiveUpLib1.setCampaignFinalTokenNameAndSymbol(string,string,uint256,mapping(uint256 => MappingCampaignIdTo),Campaign,address) (src/lib/GLib_Base1.sol#447-471) uses timestamp for comparisons
	Dangerous comparisons:
	- isLegitimateRaiser = (campaign.cId.raiser == _setter && campaign.cInfo.startAt > block.timestamp) (src/lib/GLib_Base1.sol#455)
	- isLegitimateCommunityAddr = (campaign.cInfo.startAt <= block.timestamp && mappingCId[_forCampaignId].community.presentAddr == _setter) (src/lib/GLib_Base1.sol#456-457)
	- require(bool,string)(isLegitimateRaiser || isLegitimateCommunityAddr,setter is not raiser or community in RIGHT timeframe) (src/lib/GLib_Base1.sol#459)
GiveUpLib2.updateCampaign(uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[],Campaign) (src/lib/GLib_Base2.sol#159-280) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp <= campaign.cInfo.startAt,start time must be now or in future) (src/lib/GLib_Base2.sol#188)
	- block.timestamp <= localStartAt && localStartAt < localDeadline (src/lib/GLib_Base2.sol#272)
GiveUpLib2.createCampaign(uint256,uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,Campaign) (src/lib/GLib_Base2.sol#492-546) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_timeline[0] >= block.timestamp && _timeline[0] < _timeline[1],start time and deadline invalid) (src/lib/GLib_Base2.sol#504-505)
GiveUpLib2.requestRefund(PackedVars1,Campaign,mapping(uint256 => mapping(address => mapping(uint256 => VoteData))),ContractFunded,MappingCampaignIdTo,mapping(address => string),mapping(uint256 => mapping(uint256 => address))) (src/lib/GLib_Base2.sol#665-852) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)((msg.sender == packedVars1.addressVars[0] || campaign.cStatus.campaignStatus == campaignStatusEnum.REVERTING || ((campaign.cStatus.campaignStatus == campaignStatusEnum.OPEN || campaign.cStatus.campaignStatus == campaignStatusEnum.APPROVED_UNLIMITED) && (campaign.cInfo.deadline < block.timestamp || block.timestamp < campaign.cInfo.startAt || packedVars1.earlyWithdraw))),string(abi.encodePacked(Campaign' status: ,GiveUpLib1.campaignStatusToString(campaign.cStatus.campaignStatus), -> Can only refund if caller is the contract platform or Campaign expired & failed or in REVERTING period!))) (src/lib/GLib_Base2.sol#686-708)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
StdChains.getChainWithUpdatedRpcUrl(string,StdChains.Chain) (lib/forge-std/src/StdChains.sol#151-186) uses assembly
	- INLINE ASM (lib/forge-std/src/StdChains.sol#179-181)
StdCheatsSafe.assumeNotBlacklisted(address,address) (lib/forge-std/src/StdCheats.sol#209-227) uses assembly
	- INLINE ASM (lib/forge-std/src/StdCheats.sol#212-214)
StdCheatsSafe.deployCode(string,bytes) (lib/forge-std/src/StdCheats.sol#490-498) uses assembly
	- INLINE ASM (lib/forge-std/src/StdCheats.sol#493-495)
StdCheatsSafe.deployCode(string) (lib/forge-std/src/StdCheats.sol#500-508) uses assembly
	- INLINE ASM (lib/forge-std/src/StdCheats.sol#503-505)
StdCheatsSafe.deployCode(string,bytes,uint256) (lib/forge-std/src/StdCheats.sol#511-519) uses assembly
	- INLINE ASM (lib/forge-std/src/StdCheats.sol#514-516)
StdCheatsSafe.deployCode(string,uint256) (lib/forge-std/src/StdCheats.sol#521-529) uses assembly
	- INLINE ASM (lib/forge-std/src/StdCheats.sol#524-526)
StdCheatsSafe._viewChainId() (lib/forge-std/src/StdCheats.sol#619-626) uses assembly
	- INLINE ASM (lib/forge-std/src/StdCheats.sol#621-623)
StdCheatsSafe._pureChainId() (lib/forge-std/src/StdCheats.sol#628-635) uses assembly
	- INLINE ASM (lib/forge-std/src/StdCheats.sol#631-633)
stdStorageSafe.flatten(bytes32[]) (lib/forge-std/src/StdStorage.sol#292-303) uses assembly
	- INLINE ASM (lib/forge-std/src/StdStorage.sol#297-299)
stdStorageSafe.getMaskByOffsets(uint256,uint256) (lib/forge-std/src/StdStorage.sol#316-322) uses assembly
	- INLINE ASM (lib/forge-std/src/StdStorage.sol#319-321)
stdStorage.checked_write(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#401-408) uses assembly
	- INLINE ASM (lib/forge-std/src/StdStorage.sol#404-406)
StdUtils.getTokenBalances(address,address[]) (lib/forge-std/src/StdUtils.sol#151-178) uses assembly
	- INLINE ASM (lib/forge-std/src/StdUtils.sol#157-159)
StdUtils._castLogPayloadViewToPure(function(bytes)) (lib/forge-std/src/StdUtils.sol#191-199) uses assembly
	- INLINE ASM (lib/forge-std/src/StdUtils.sol#196-198)
StdUtils._sendLogPayloadView(bytes) (lib/forge-std/src/StdUtils.sol#205-213) uses assembly
	- INLINE ASM (lib/forge-std/src/StdUtils.sol#209-212)
console._sendLogPayload(bytes) (lib/forge-std/src/console.sol#7-15) uses assembly
	- INLINE ASM (lib/forge-std/src/console.sol#11-14)
console2._castLogPayloadViewToPure(function(bytes)) (lib/forge-std/src/console2.sol#12-18) uses assembly
	- INLINE ASM (lib/forge-std/src/console2.sol#15-17)
console2._sendLogPayloadView(bytes) (lib/forge-std/src/console2.sol#24-32) uses assembly
	- INLINE ASM (lib/forge-std/src/console2.sol#28-31)
MockERC20._viewChainId() (lib/forge-std/src/mocks/MockERC20.sol#217-224) uses assembly
	- INLINE ASM (lib/forge-std/src/mocks/MockERC20.sol#219-221)
MockERC20._pureChainId() (lib/forge-std/src/mocks/MockERC20.sol#226-233) uses assembly
	- INLINE ASM (lib/forge-std/src/mocks/MockERC20.sol#229-231)
MockERC721._isContract(address) (lib/forge-std/src/mocks/MockERC721.sol#221-230) uses assembly
	- INLINE ASM (lib/forge-std/src/mocks/MockERC721.sol#225-227)
safeconsole._sendLogPayload(uint256,uint256) (lib/forge-std/src/safeconsole.sol#11-18) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#14-16)
safeconsole._sendLogPayloadView(uint256,uint256) (lib/forge-std/src/safeconsole.sol#20-24) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#21-23)
safeconsole._memcopy(uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#26-33) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#29-31)
safeconsole._memcopyView(uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#35-39) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#36-38)
safeconsole.logMemory(uint256,uint256) (lib/forge-std/src/safeconsole.sol#41-88) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#47-55)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#57-61)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#68-72)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#74-79)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#82-86)
safeconsole.log(address) (lib/forge-std/src/safeconsole.sol#90-105) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#93-99)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#101-104)
safeconsole.log(bool) (lib/forge-std/src/safeconsole.sol#107-122) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#110-116)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#118-121)
safeconsole.log(uint256) (lib/forge-std/src/safeconsole.sol#124-139) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#127-133)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#135-138)
safeconsole.log(bytes32) (lib/forge-std/src/safeconsole.sol#141-170) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#146-162)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#164-169)
safeconsole.log(address,address) (lib/forge-std/src/safeconsole.sol#172-191) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#176-184)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#186-190)
safeconsole.log(address,bool) (lib/forge-std/src/safeconsole.sol#193-212) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#197-205)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#207-211)
safeconsole.log(address,uint256) (lib/forge-std/src/safeconsole.sol#214-233) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#218-226)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#228-232)
safeconsole.log(address,bytes32) (lib/forge-std/src/safeconsole.sol#235-268) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#241-259)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#261-267)
safeconsole.log(bool,address) (lib/forge-std/src/safeconsole.sol#270-289) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#274-282)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#284-288)
safeconsole.log(bool,bool) (lib/forge-std/src/safeconsole.sol#291-310) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#295-303)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#305-309)
safeconsole.log(bool,uint256) (lib/forge-std/src/safeconsole.sol#312-331) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#316-324)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#326-330)
safeconsole.log(bool,bytes32) (lib/forge-std/src/safeconsole.sol#333-366) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#339-357)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#359-365)
safeconsole.log(uint256,address) (lib/forge-std/src/safeconsole.sol#368-387) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#372-380)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#382-386)
safeconsole.log(uint256,bool) (lib/forge-std/src/safeconsole.sol#389-408) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#393-401)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#403-407)
safeconsole.log(uint256,uint256) (lib/forge-std/src/safeconsole.sol#410-429) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#414-422)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#424-428)
safeconsole.log(uint256,bytes32) (lib/forge-std/src/safeconsole.sol#431-464) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#437-455)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#457-463)
safeconsole.log(bytes32,address) (lib/forge-std/src/safeconsole.sol#466-499) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#472-490)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#492-498)
safeconsole.log(bytes32,bool) (lib/forge-std/src/safeconsole.sol#501-534) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#507-525)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#527-533)
safeconsole.log(bytes32,uint256) (lib/forge-std/src/safeconsole.sol#536-569) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#542-560)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#562-568)
safeconsole.log(bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#571-611) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#579-600)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#602-610)
safeconsole.log(address,address,address) (lib/forge-std/src/safeconsole.sol#613-636) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#618-628)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#630-635)
safeconsole.log(address,address,bool) (lib/forge-std/src/safeconsole.sol#638-661) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#643-653)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#655-660)
safeconsole.log(address,address,uint256) (lib/forge-std/src/safeconsole.sol#663-686) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#668-678)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#680-685)
safeconsole.log(address,address,bytes32) (lib/forge-std/src/safeconsole.sol#688-725) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#695-715)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#717-724)
safeconsole.log(address,bool,address) (lib/forge-std/src/safeconsole.sol#727-750) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#732-742)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#744-749)
safeconsole.log(address,bool,bool) (lib/forge-std/src/safeconsole.sol#752-775) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#757-767)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#769-774)
safeconsole.log(address,bool,uint256) (lib/forge-std/src/safeconsole.sol#777-800) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#782-792)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#794-799)
safeconsole.log(address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#802-839) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#809-829)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#831-838)
safeconsole.log(address,uint256,address) (lib/forge-std/src/safeconsole.sol#841-864) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#846-856)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#858-863)
safeconsole.log(address,uint256,bool) (lib/forge-std/src/safeconsole.sol#866-889) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#871-881)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#883-888)
safeconsole.log(address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#891-914) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#896-906)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#908-913)
safeconsole.log(address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#916-953) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#923-943)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#945-952)
safeconsole.log(address,bytes32,address) (lib/forge-std/src/safeconsole.sol#955-992) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#962-982)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#984-991)
safeconsole.log(address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#994-1031) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1001-1021)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1023-1030)
safeconsole.log(address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#1033-1070) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1040-1060)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1062-1069)
safeconsole.log(address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#1072-1116) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1081-1104)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1106-1115)
safeconsole.log(bool,address,address) (lib/forge-std/src/safeconsole.sol#1118-1141) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1123-1133)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1135-1140)
safeconsole.log(bool,address,bool) (lib/forge-std/src/safeconsole.sol#1143-1166) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1148-1158)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1160-1165)
safeconsole.log(bool,address,uint256) (lib/forge-std/src/safeconsole.sol#1168-1191) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1173-1183)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1185-1190)
safeconsole.log(bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#1193-1230) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1200-1220)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1222-1229)
safeconsole.log(bool,bool,address) (lib/forge-std/src/safeconsole.sol#1232-1255) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1237-1247)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1249-1254)
safeconsole.log(bool,bool,bool) (lib/forge-std/src/safeconsole.sol#1257-1280) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1262-1272)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1274-1279)
safeconsole.log(bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#1282-1305) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1287-1297)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1299-1304)
safeconsole.log(bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#1307-1344) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1314-1334)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1336-1343)
safeconsole.log(bool,uint256,address) (lib/forge-std/src/safeconsole.sol#1346-1369) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1351-1361)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1363-1368)
safeconsole.log(bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#1371-1394) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1376-1386)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1388-1393)
safeconsole.log(bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#1396-1419) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1401-1411)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1413-1418)
safeconsole.log(bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#1421-1458) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1428-1448)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1450-1457)
safeconsole.log(bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#1460-1497) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1467-1487)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1489-1496)
safeconsole.log(bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#1499-1536) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1506-1526)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1528-1535)
safeconsole.log(bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#1538-1575) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1545-1565)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1567-1574)
safeconsole.log(bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#1577-1621) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1586-1609)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1611-1620)
safeconsole.log(uint256,address,address) (lib/forge-std/src/safeconsole.sol#1623-1646) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1628-1638)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1640-1645)
safeconsole.log(uint256,address,bool) (lib/forge-std/src/safeconsole.sol#1648-1671) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1653-1663)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1665-1670)
safeconsole.log(uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#1673-1696) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1678-1688)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1690-1695)
safeconsole.log(uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#1698-1735) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1705-1725)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1727-1734)
safeconsole.log(uint256,bool,address) (lib/forge-std/src/safeconsole.sol#1737-1760) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1742-1752)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1754-1759)
safeconsole.log(uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#1762-1785) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1767-1777)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1779-1784)
safeconsole.log(uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#1787-1810) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1792-1802)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1804-1809)
safeconsole.log(uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#1812-1849) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1819-1839)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1841-1848)
safeconsole.log(uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#1851-1874) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1856-1866)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1868-1873)
safeconsole.log(uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#1876-1899) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1881-1891)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1893-1898)
safeconsole.log(uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#1901-1924) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1906-1916)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1918-1923)
safeconsole.log(uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#1926-1963) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1933-1953)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1955-1962)
safeconsole.log(uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#1965-2002) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1972-1992)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#1994-2001)
safeconsole.log(uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#2004-2041) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2011-2031)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2033-2040)
safeconsole.log(uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#2043-2080) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2050-2070)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2072-2079)
safeconsole.log(uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#2082-2126) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2091-2114)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2116-2125)
safeconsole.log(bytes32,address,address) (lib/forge-std/src/safeconsole.sol#2128-2165) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2135-2155)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2157-2164)
safeconsole.log(bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#2167-2204) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2174-2194)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2196-2203)
safeconsole.log(bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#2206-2243) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2213-2233)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2235-2242)
safeconsole.log(bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#2245-2289) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2254-2277)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2279-2288)
safeconsole.log(bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#2291-2328) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2298-2318)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2320-2327)
safeconsole.log(bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#2330-2367) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2337-2357)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2359-2366)
safeconsole.log(bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#2369-2406) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2376-2396)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2398-2405)
safeconsole.log(bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#2408-2452) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2417-2440)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2442-2451)
safeconsole.log(bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#2454-2491) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2461-2481)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2483-2490)
safeconsole.log(bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#2493-2530) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2500-2520)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2522-2529)
safeconsole.log(bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#2532-2569) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2539-2559)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2561-2568)
safeconsole.log(bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#2571-2615) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2580-2603)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2605-2614)
safeconsole.log(bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#2617-2661) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2626-2649)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2651-2660)
safeconsole.log(bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#2663-2707) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2672-2695)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2697-2706)
safeconsole.log(bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#2709-2753) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2718-2741)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2743-2752)
safeconsole.log(bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#2755-2806) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2766-2792)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2794-2805)
safeconsole.log(address,address,address,address) (lib/forge-std/src/safeconsole.sol#2808-2835) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2814-2826)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2828-2834)
safeconsole.log(address,address,address,bool) (lib/forge-std/src/safeconsole.sol#2837-2864) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2843-2855)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2857-2863)
safeconsole.log(address,address,address,uint256) (lib/forge-std/src/safeconsole.sol#2866-2893) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2872-2884)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2886-2892)
safeconsole.log(address,address,address,bytes32) (lib/forge-std/src/safeconsole.sol#2895-2936) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2903-2925)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2927-2935)
safeconsole.log(address,address,bool,address) (lib/forge-std/src/safeconsole.sol#2938-2965) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2944-2956)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2958-2964)
safeconsole.log(address,address,bool,bool) (lib/forge-std/src/safeconsole.sol#2967-2994) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2973-2985)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#2987-2993)
safeconsole.log(address,address,bool,uint256) (lib/forge-std/src/safeconsole.sol#2996-3023) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3002-3014)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3016-3022)
safeconsole.log(address,address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#3025-3066) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3033-3055)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3057-3065)
safeconsole.log(address,address,uint256,address) (lib/forge-std/src/safeconsole.sol#3068-3095) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3074-3086)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3088-3094)
safeconsole.log(address,address,uint256,bool) (lib/forge-std/src/safeconsole.sol#3097-3124) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3103-3115)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3117-3123)
safeconsole.log(address,address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#3126-3153) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3132-3144)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3146-3152)
safeconsole.log(address,address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#3155-3196) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3163-3185)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3187-3195)
safeconsole.log(address,address,bytes32,address) (lib/forge-std/src/safeconsole.sol#3198-3239) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3206-3228)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3230-3238)
safeconsole.log(address,address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#3241-3282) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3249-3271)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3273-3281)
safeconsole.log(address,address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#3284-3325) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3292-3314)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3316-3324)
safeconsole.log(address,address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#3327-3375) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3337-3362)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3364-3374)
safeconsole.log(address,bool,address,address) (lib/forge-std/src/safeconsole.sol#3377-3404) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3383-3395)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3397-3403)
safeconsole.log(address,bool,address,bool) (lib/forge-std/src/safeconsole.sol#3406-3433) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3412-3424)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3426-3432)
safeconsole.log(address,bool,address,uint256) (lib/forge-std/src/safeconsole.sol#3435-3462) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3441-3453)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3455-3461)
safeconsole.log(address,bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#3464-3505) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3472-3494)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3496-3504)
safeconsole.log(address,bool,bool,address) (lib/forge-std/src/safeconsole.sol#3507-3534) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3513-3525)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3527-3533)
safeconsole.log(address,bool,bool,bool) (lib/forge-std/src/safeconsole.sol#3536-3563) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3542-3554)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3556-3562)
safeconsole.log(address,bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#3565-3592) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3571-3583)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3585-3591)
safeconsole.log(address,bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#3594-3635) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3602-3624)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3626-3634)
safeconsole.log(address,bool,uint256,address) (lib/forge-std/src/safeconsole.sol#3637-3664) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3643-3655)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3657-3663)
safeconsole.log(address,bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#3666-3693) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3672-3684)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3686-3692)
safeconsole.log(address,bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#3695-3722) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3701-3713)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3715-3721)
safeconsole.log(address,bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#3724-3765) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3732-3754)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3756-3764)
safeconsole.log(address,bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#3767-3808) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3775-3797)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3799-3807)
safeconsole.log(address,bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#3810-3851) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3818-3840)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3842-3850)
safeconsole.log(address,bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#3853-3894) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3861-3883)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3885-3893)
safeconsole.log(address,bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#3896-3944) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3906-3931)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3933-3943)
safeconsole.log(address,uint256,address,address) (lib/forge-std/src/safeconsole.sol#3946-3973) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3952-3964)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3966-3972)
safeconsole.log(address,uint256,address,bool) (lib/forge-std/src/safeconsole.sol#3975-4002) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3981-3993)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#3995-4001)
safeconsole.log(address,uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#4004-4031) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4010-4022)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4024-4030)
safeconsole.log(address,uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#4033-4074) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4041-4063)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4065-4073)
safeconsole.log(address,uint256,bool,address) (lib/forge-std/src/safeconsole.sol#4076-4103) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4082-4094)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4096-4102)
safeconsole.log(address,uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#4105-4132) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4111-4123)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4125-4131)
safeconsole.log(address,uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#4134-4161) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4140-4152)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4154-4160)
safeconsole.log(address,uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#4163-4204) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4171-4193)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4195-4203)
safeconsole.log(address,uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#4206-4233) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4212-4224)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4226-4232)
safeconsole.log(address,uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#4235-4262) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4241-4253)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4255-4261)
safeconsole.log(address,uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#4264-4291) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4270-4282)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4284-4290)
safeconsole.log(address,uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#4293-4334) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4301-4323)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4325-4333)
safeconsole.log(address,uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#4336-4377) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4344-4366)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4368-4376)
safeconsole.log(address,uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#4379-4420) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4387-4409)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4411-4419)
safeconsole.log(address,uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#4422-4463) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4430-4452)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4454-4462)
safeconsole.log(address,uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#4465-4513) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4475-4500)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4502-4512)
safeconsole.log(address,bytes32,address,address) (lib/forge-std/src/safeconsole.sol#4515-4556) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4523-4545)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4547-4555)
safeconsole.log(address,bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#4558-4599) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4566-4588)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4590-4598)
safeconsole.log(address,bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#4601-4642) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4609-4631)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4633-4641)
safeconsole.log(address,bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#4644-4692) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4654-4679)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4681-4691)
safeconsole.log(address,bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#4694-4735) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4702-4724)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4726-4734)
safeconsole.log(address,bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#4737-4778) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4745-4767)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4769-4777)
safeconsole.log(address,bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#4780-4821) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4788-4810)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4812-4820)
safeconsole.log(address,bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#4823-4871) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4833-4858)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4860-4870)
safeconsole.log(address,bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#4873-4914) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4881-4903)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4905-4913)
safeconsole.log(address,bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#4916-4957) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4924-4946)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4948-4956)
safeconsole.log(address,bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#4959-5000) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4967-4989)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#4991-4999)
safeconsole.log(address,bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#5002-5050) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5012-5037)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5039-5049)
safeconsole.log(address,bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#5052-5100) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5062-5087)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5089-5099)
safeconsole.log(address,bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#5102-5150) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5112-5137)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5139-5149)
safeconsole.log(address,bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#5152-5200) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5162-5187)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5189-5199)
safeconsole.log(address,bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#5202-5257) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5214-5242)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5244-5256)
safeconsole.log(bool,address,address,address) (lib/forge-std/src/safeconsole.sol#5259-5286) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5265-5277)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5279-5285)
safeconsole.log(bool,address,address,bool) (lib/forge-std/src/safeconsole.sol#5288-5315) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5294-5306)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5308-5314)
safeconsole.log(bool,address,address,uint256) (lib/forge-std/src/safeconsole.sol#5317-5344) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5323-5335)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5337-5343)
safeconsole.log(bool,address,address,bytes32) (lib/forge-std/src/safeconsole.sol#5346-5387) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5354-5376)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5378-5386)
safeconsole.log(bool,address,bool,address) (lib/forge-std/src/safeconsole.sol#5389-5416) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5395-5407)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5409-5415)
safeconsole.log(bool,address,bool,bool) (lib/forge-std/src/safeconsole.sol#5418-5445) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5424-5436)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5438-5444)
safeconsole.log(bool,address,bool,uint256) (lib/forge-std/src/safeconsole.sol#5447-5474) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5453-5465)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5467-5473)
safeconsole.log(bool,address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#5476-5517) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5484-5506)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5508-5516)
safeconsole.log(bool,address,uint256,address) (lib/forge-std/src/safeconsole.sol#5519-5546) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5525-5537)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5539-5545)
safeconsole.log(bool,address,uint256,bool) (lib/forge-std/src/safeconsole.sol#5548-5575) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5554-5566)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5568-5574)
safeconsole.log(bool,address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#5577-5604) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5583-5595)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5597-5603)
safeconsole.log(bool,address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#5606-5647) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5614-5636)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5638-5646)
safeconsole.log(bool,address,bytes32,address) (lib/forge-std/src/safeconsole.sol#5649-5690) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5657-5679)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5681-5689)
safeconsole.log(bool,address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#5692-5733) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5700-5722)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5724-5732)
safeconsole.log(bool,address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#5735-5776) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5743-5765)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5767-5775)
safeconsole.log(bool,address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#5778-5826) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5788-5813)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5815-5825)
safeconsole.log(bool,bool,address,address) (lib/forge-std/src/safeconsole.sol#5828-5855) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5834-5846)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5848-5854)
safeconsole.log(bool,bool,address,bool) (lib/forge-std/src/safeconsole.sol#5857-5884) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5863-5875)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5877-5883)
safeconsole.log(bool,bool,address,uint256) (lib/forge-std/src/safeconsole.sol#5886-5913) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5892-5904)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5906-5912)
safeconsole.log(bool,bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#5915-5956) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5923-5945)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5947-5955)
safeconsole.log(bool,bool,bool,address) (lib/forge-std/src/safeconsole.sol#5958-5985) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5964-5976)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5978-5984)
safeconsole.log(bool,bool,bool,bool) (lib/forge-std/src/safeconsole.sol#5987-6014) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#5993-6005)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6007-6013)
safeconsole.log(bool,bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#6016-6043) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6022-6034)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6036-6042)
safeconsole.log(bool,bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#6045-6086) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6053-6075)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6077-6085)
safeconsole.log(bool,bool,uint256,address) (lib/forge-std/src/safeconsole.sol#6088-6115) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6094-6106)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6108-6114)
safeconsole.log(bool,bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#6117-6144) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6123-6135)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6137-6143)
safeconsole.log(bool,bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#6146-6173) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6152-6164)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6166-6172)
safeconsole.log(bool,bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#6175-6216) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6183-6205)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6207-6215)
safeconsole.log(bool,bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#6218-6259) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6226-6248)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6250-6258)
safeconsole.log(bool,bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#6261-6302) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6269-6291)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6293-6301)
safeconsole.log(bool,bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#6304-6345) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6312-6334)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6336-6344)
safeconsole.log(bool,bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#6347-6395) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6357-6382)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6384-6394)
safeconsole.log(bool,uint256,address,address) (lib/forge-std/src/safeconsole.sol#6397-6424) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6403-6415)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6417-6423)
safeconsole.log(bool,uint256,address,bool) (lib/forge-std/src/safeconsole.sol#6426-6453) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6432-6444)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6446-6452)
safeconsole.log(bool,uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#6455-6482) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6461-6473)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6475-6481)
safeconsole.log(bool,uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#6484-6525) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6492-6514)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6516-6524)
safeconsole.log(bool,uint256,bool,address) (lib/forge-std/src/safeconsole.sol#6527-6554) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6533-6545)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6547-6553)
safeconsole.log(bool,uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#6556-6583) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6562-6574)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6576-6582)
safeconsole.log(bool,uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#6585-6612) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6591-6603)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6605-6611)
safeconsole.log(bool,uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#6614-6655) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6622-6644)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6646-6654)
safeconsole.log(bool,uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#6657-6684) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6663-6675)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6677-6683)
safeconsole.log(bool,uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#6686-6713) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6692-6704)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6706-6712)
safeconsole.log(bool,uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#6715-6742) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6721-6733)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6735-6741)
safeconsole.log(bool,uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#6744-6785) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6752-6774)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6776-6784)
safeconsole.log(bool,uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#6787-6828) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6795-6817)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6819-6827)
safeconsole.log(bool,uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#6830-6871) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6838-6860)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6862-6870)
safeconsole.log(bool,uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#6873-6914) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6881-6903)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6905-6913)
safeconsole.log(bool,uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#6916-6964) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6926-6951)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6953-6963)
safeconsole.log(bool,bytes32,address,address) (lib/forge-std/src/safeconsole.sol#6966-7007) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6974-6996)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#6998-7006)
safeconsole.log(bool,bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#7009-7050) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7017-7039)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7041-7049)
safeconsole.log(bool,bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#7052-7093) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7060-7082)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7084-7092)
safeconsole.log(bool,bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#7095-7143) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7105-7130)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7132-7142)
safeconsole.log(bool,bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#7145-7186) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7153-7175)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7177-7185)
safeconsole.log(bool,bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#7188-7229) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7196-7218)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7220-7228)
safeconsole.log(bool,bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#7231-7272) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7239-7261)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7263-7271)
safeconsole.log(bool,bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#7274-7322) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7284-7309)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7311-7321)
safeconsole.log(bool,bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#7324-7365) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7332-7354)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7356-7364)
safeconsole.log(bool,bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#7367-7408) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7375-7397)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7399-7407)
safeconsole.log(bool,bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#7410-7451) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7418-7440)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7442-7450)
safeconsole.log(bool,bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#7453-7501) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7463-7488)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7490-7500)
safeconsole.log(bool,bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#7503-7551) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7513-7538)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7540-7550)
safeconsole.log(bool,bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#7553-7601) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7563-7588)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7590-7600)
safeconsole.log(bool,bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#7603-7651) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7613-7638)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7640-7650)
safeconsole.log(bool,bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#7653-7708) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7665-7693)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7695-7707)
safeconsole.log(uint256,address,address,address) (lib/forge-std/src/safeconsole.sol#7710-7737) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7716-7728)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7730-7736)
safeconsole.log(uint256,address,address,bool) (lib/forge-std/src/safeconsole.sol#7739-7766) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7745-7757)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7759-7765)
safeconsole.log(uint256,address,address,uint256) (lib/forge-std/src/safeconsole.sol#7768-7795) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7774-7786)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7788-7794)
safeconsole.log(uint256,address,address,bytes32) (lib/forge-std/src/safeconsole.sol#7797-7838) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7805-7827)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7829-7837)
safeconsole.log(uint256,address,bool,address) (lib/forge-std/src/safeconsole.sol#7840-7867) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7846-7858)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7860-7866)
safeconsole.log(uint256,address,bool,bool) (lib/forge-std/src/safeconsole.sol#7869-7896) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7875-7887)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7889-7895)
safeconsole.log(uint256,address,bool,uint256) (lib/forge-std/src/safeconsole.sol#7898-7925) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7904-7916)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7918-7924)
safeconsole.log(uint256,address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#7927-7968) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7935-7957)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7959-7967)
safeconsole.log(uint256,address,uint256,address) (lib/forge-std/src/safeconsole.sol#7970-7997) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7976-7988)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#7990-7996)
safeconsole.log(uint256,address,uint256,bool) (lib/forge-std/src/safeconsole.sol#7999-8026) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8005-8017)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8019-8025)
safeconsole.log(uint256,address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#8028-8055) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8034-8046)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8048-8054)
safeconsole.log(uint256,address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#8057-8098) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8065-8087)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8089-8097)
safeconsole.log(uint256,address,bytes32,address) (lib/forge-std/src/safeconsole.sol#8100-8141) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8108-8130)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8132-8140)
safeconsole.log(uint256,address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#8143-8184) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8151-8173)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8175-8183)
safeconsole.log(uint256,address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#8186-8227) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8194-8216)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8218-8226)
safeconsole.log(uint256,address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#8229-8277) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8239-8264)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8266-8276)
safeconsole.log(uint256,bool,address,address) (lib/forge-std/src/safeconsole.sol#8279-8306) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8285-8297)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8299-8305)
safeconsole.log(uint256,bool,address,bool) (lib/forge-std/src/safeconsole.sol#8308-8335) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8314-8326)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8328-8334)
safeconsole.log(uint256,bool,address,uint256) (lib/forge-std/src/safeconsole.sol#8337-8364) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8343-8355)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8357-8363)
safeconsole.log(uint256,bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#8366-8407) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8374-8396)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8398-8406)
safeconsole.log(uint256,bool,bool,address) (lib/forge-std/src/safeconsole.sol#8409-8436) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8415-8427)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8429-8435)
safeconsole.log(uint256,bool,bool,bool) (lib/forge-std/src/safeconsole.sol#8438-8465) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8444-8456)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8458-8464)
safeconsole.log(uint256,bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#8467-8494) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8473-8485)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8487-8493)
safeconsole.log(uint256,bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#8496-8537) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8504-8526)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8528-8536)
safeconsole.log(uint256,bool,uint256,address) (lib/forge-std/src/safeconsole.sol#8539-8566) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8545-8557)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8559-8565)
safeconsole.log(uint256,bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#8568-8595) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8574-8586)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8588-8594)
safeconsole.log(uint256,bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#8597-8624) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8603-8615)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8617-8623)
safeconsole.log(uint256,bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#8626-8667) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8634-8656)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8658-8666)
safeconsole.log(uint256,bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#8669-8710) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8677-8699)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8701-8709)
safeconsole.log(uint256,bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#8712-8753) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8720-8742)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8744-8752)
safeconsole.log(uint256,bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#8755-8796) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8763-8785)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8787-8795)
safeconsole.log(uint256,bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#8798-8846) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8808-8833)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8835-8845)
safeconsole.log(uint256,uint256,address,address) (lib/forge-std/src/safeconsole.sol#8848-8875) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8854-8866)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8868-8874)
safeconsole.log(uint256,uint256,address,bool) (lib/forge-std/src/safeconsole.sol#8877-8904) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8883-8895)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8897-8903)
safeconsole.log(uint256,uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#8906-8933) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8912-8924)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8926-8932)
safeconsole.log(uint256,uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#8935-8976) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8943-8965)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8967-8975)
safeconsole.log(uint256,uint256,bool,address) (lib/forge-std/src/safeconsole.sol#8978-9005) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8984-8996)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#8998-9004)
safeconsole.log(uint256,uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#9007-9034) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9013-9025)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9027-9033)
safeconsole.log(uint256,uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#9036-9063) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9042-9054)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9056-9062)
safeconsole.log(uint256,uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#9065-9106) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9073-9095)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9097-9105)
safeconsole.log(uint256,uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#9108-9135) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9114-9126)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9128-9134)
safeconsole.log(uint256,uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#9137-9164) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9143-9155)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9157-9163)
safeconsole.log(uint256,uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#9166-9193) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9172-9184)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9186-9192)
safeconsole.log(uint256,uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#9195-9236) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9203-9225)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9227-9235)
safeconsole.log(uint256,uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#9238-9279) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9246-9268)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9270-9278)
safeconsole.log(uint256,uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#9281-9322) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9289-9311)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9313-9321)
safeconsole.log(uint256,uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#9324-9365) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9332-9354)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9356-9364)
safeconsole.log(uint256,uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#9367-9415) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9377-9402)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9404-9414)
safeconsole.log(uint256,bytes32,address,address) (lib/forge-std/src/safeconsole.sol#9417-9458) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9425-9447)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9449-9457)
safeconsole.log(uint256,bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#9460-9501) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9468-9490)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9492-9500)
safeconsole.log(uint256,bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#9503-9544) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9511-9533)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9535-9543)
safeconsole.log(uint256,bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#9546-9594) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9556-9581)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9583-9593)
safeconsole.log(uint256,bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#9596-9637) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9604-9626)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9628-9636)
safeconsole.log(uint256,bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#9639-9680) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9647-9669)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9671-9679)
safeconsole.log(uint256,bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#9682-9723) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9690-9712)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9714-9722)
safeconsole.log(uint256,bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#9725-9773) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9735-9760)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9762-9772)
safeconsole.log(uint256,bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#9775-9816) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9783-9805)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9807-9815)
safeconsole.log(uint256,bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#9818-9859) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9826-9848)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9850-9858)
safeconsole.log(uint256,bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#9861-9902) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9869-9891)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9893-9901)
safeconsole.log(uint256,bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#9904-9952) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9914-9939)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9941-9951)
safeconsole.log(uint256,bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#9954-10002) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9964-9989)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#9991-10001)
safeconsole.log(uint256,bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#10004-10052) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10014-10039)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10041-10051)
safeconsole.log(uint256,bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#10054-10102) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10064-10089)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10091-10101)
safeconsole.log(uint256,bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#10104-10159) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10116-10144)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10146-10158)
safeconsole.log(bytes32,address,address,address) (lib/forge-std/src/safeconsole.sol#10161-10202) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10169-10191)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10193-10201)
safeconsole.log(bytes32,address,address,bool) (lib/forge-std/src/safeconsole.sol#10204-10245) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10212-10234)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10236-10244)
safeconsole.log(bytes32,address,address,uint256) (lib/forge-std/src/safeconsole.sol#10247-10288) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10255-10277)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10279-10287)
safeconsole.log(bytes32,address,address,bytes32) (lib/forge-std/src/safeconsole.sol#10290-10338) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10300-10325)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10327-10337)
safeconsole.log(bytes32,address,bool,address) (lib/forge-std/src/safeconsole.sol#10340-10381) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10348-10370)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10372-10380)
safeconsole.log(bytes32,address,bool,bool) (lib/forge-std/src/safeconsole.sol#10383-10424) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10391-10413)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10415-10423)
safeconsole.log(bytes32,address,bool,uint256) (lib/forge-std/src/safeconsole.sol#10426-10467) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10434-10456)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10458-10466)
safeconsole.log(bytes32,address,bool,bytes32) (lib/forge-std/src/safeconsole.sol#10469-10517) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10479-10504)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10506-10516)
safeconsole.log(bytes32,address,uint256,address) (lib/forge-std/src/safeconsole.sol#10519-10560) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10527-10549)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10551-10559)
safeconsole.log(bytes32,address,uint256,bool) (lib/forge-std/src/safeconsole.sol#10562-10603) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10570-10592)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10594-10602)
safeconsole.log(bytes32,address,uint256,uint256) (lib/forge-std/src/safeconsole.sol#10605-10646) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10613-10635)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10637-10645)
safeconsole.log(bytes32,address,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#10648-10696) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10658-10683)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10685-10695)
safeconsole.log(bytes32,address,bytes32,address) (lib/forge-std/src/safeconsole.sol#10698-10746) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10708-10733)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10735-10745)
safeconsole.log(bytes32,address,bytes32,bool) (lib/forge-std/src/safeconsole.sol#10748-10796) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10758-10783)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10785-10795)
safeconsole.log(bytes32,address,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#10798-10846) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10808-10833)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10835-10845)
safeconsole.log(bytes32,address,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#10848-10903) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10860-10888)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10890-10902)
safeconsole.log(bytes32,bool,address,address) (lib/forge-std/src/safeconsole.sol#10905-10946) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10913-10935)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10937-10945)
safeconsole.log(bytes32,bool,address,bool) (lib/forge-std/src/safeconsole.sol#10948-10989) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10956-10978)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10980-10988)
safeconsole.log(bytes32,bool,address,uint256) (lib/forge-std/src/safeconsole.sol#10991-11032) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#10999-11021)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11023-11031)
safeconsole.log(bytes32,bool,address,bytes32) (lib/forge-std/src/safeconsole.sol#11034-11082) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11044-11069)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11071-11081)
safeconsole.log(bytes32,bool,bool,address) (lib/forge-std/src/safeconsole.sol#11084-11125) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11092-11114)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11116-11124)
safeconsole.log(bytes32,bool,bool,bool) (lib/forge-std/src/safeconsole.sol#11127-11168) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11135-11157)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11159-11167)
safeconsole.log(bytes32,bool,bool,uint256) (lib/forge-std/src/safeconsole.sol#11170-11211) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11178-11200)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11202-11210)
safeconsole.log(bytes32,bool,bool,bytes32) (lib/forge-std/src/safeconsole.sol#11213-11261) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11223-11248)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11250-11260)
safeconsole.log(bytes32,bool,uint256,address) (lib/forge-std/src/safeconsole.sol#11263-11304) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11271-11293)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11295-11303)
safeconsole.log(bytes32,bool,uint256,bool) (lib/forge-std/src/safeconsole.sol#11306-11347) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11314-11336)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11338-11346)
safeconsole.log(bytes32,bool,uint256,uint256) (lib/forge-std/src/safeconsole.sol#11349-11390) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11357-11379)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11381-11389)
safeconsole.log(bytes32,bool,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#11392-11440) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11402-11427)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11429-11439)
safeconsole.log(bytes32,bool,bytes32,address) (lib/forge-std/src/safeconsole.sol#11442-11490) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11452-11477)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11479-11489)
safeconsole.log(bytes32,bool,bytes32,bool) (lib/forge-std/src/safeconsole.sol#11492-11540) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11502-11527)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11529-11539)
safeconsole.log(bytes32,bool,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#11542-11590) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11552-11577)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11579-11589)
safeconsole.log(bytes32,bool,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#11592-11647) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11604-11632)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11634-11646)
safeconsole.log(bytes32,uint256,address,address) (lib/forge-std/src/safeconsole.sol#11649-11690) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11657-11679)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11681-11689)
safeconsole.log(bytes32,uint256,address,bool) (lib/forge-std/src/safeconsole.sol#11692-11733) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11700-11722)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11724-11732)
safeconsole.log(bytes32,uint256,address,uint256) (lib/forge-std/src/safeconsole.sol#11735-11776) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11743-11765)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11767-11775)
safeconsole.log(bytes32,uint256,address,bytes32) (lib/forge-std/src/safeconsole.sol#11778-11826) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11788-11813)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11815-11825)
safeconsole.log(bytes32,uint256,bool,address) (lib/forge-std/src/safeconsole.sol#11828-11869) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11836-11858)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11860-11868)
safeconsole.log(bytes32,uint256,bool,bool) (lib/forge-std/src/safeconsole.sol#11871-11912) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11879-11901)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11903-11911)
safeconsole.log(bytes32,uint256,bool,uint256) (lib/forge-std/src/safeconsole.sol#11914-11955) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11922-11944)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11946-11954)
safeconsole.log(bytes32,uint256,bool,bytes32) (lib/forge-std/src/safeconsole.sol#11957-12005) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11967-11992)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#11994-12004)
safeconsole.log(bytes32,uint256,uint256,address) (lib/forge-std/src/safeconsole.sol#12007-12048) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12015-12037)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12039-12047)
safeconsole.log(bytes32,uint256,uint256,bool) (lib/forge-std/src/safeconsole.sol#12050-12091) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12058-12080)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12082-12090)
safeconsole.log(bytes32,uint256,uint256,uint256) (lib/forge-std/src/safeconsole.sol#12093-12134) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12101-12123)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12125-12133)
safeconsole.log(bytes32,uint256,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#12136-12184) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12146-12171)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12173-12183)
safeconsole.log(bytes32,uint256,bytes32,address) (lib/forge-std/src/safeconsole.sol#12186-12234) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12196-12221)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12223-12233)
safeconsole.log(bytes32,uint256,bytes32,bool) (lib/forge-std/src/safeconsole.sol#12236-12284) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12246-12271)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12273-12283)
safeconsole.log(bytes32,uint256,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#12286-12334) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12296-12321)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12323-12333)
safeconsole.log(bytes32,uint256,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#12336-12391) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12348-12376)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12378-12390)
safeconsole.log(bytes32,bytes32,address,address) (lib/forge-std/src/safeconsole.sol#12393-12441) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12403-12428)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12430-12440)
safeconsole.log(bytes32,bytes32,address,bool) (lib/forge-std/src/safeconsole.sol#12443-12491) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12453-12478)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12480-12490)
safeconsole.log(bytes32,bytes32,address,uint256) (lib/forge-std/src/safeconsole.sol#12493-12541) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12503-12528)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12530-12540)
safeconsole.log(bytes32,bytes32,address,bytes32) (lib/forge-std/src/safeconsole.sol#12543-12598) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12555-12583)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12585-12597)
safeconsole.log(bytes32,bytes32,bool,address) (lib/forge-std/src/safeconsole.sol#12600-12648) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12610-12635)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12637-12647)
safeconsole.log(bytes32,bytes32,bool,bool) (lib/forge-std/src/safeconsole.sol#12650-12698) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12660-12685)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12687-12697)
safeconsole.log(bytes32,bytes32,bool,uint256) (lib/forge-std/src/safeconsole.sol#12700-12748) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12710-12735)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12737-12747)
safeconsole.log(bytes32,bytes32,bool,bytes32) (lib/forge-std/src/safeconsole.sol#12750-12805) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12762-12790)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12792-12804)
safeconsole.log(bytes32,bytes32,uint256,address) (lib/forge-std/src/safeconsole.sol#12807-12855) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12817-12842)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12844-12854)
safeconsole.log(bytes32,bytes32,uint256,bool) (lib/forge-std/src/safeconsole.sol#12857-12905) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12867-12892)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12894-12904)
safeconsole.log(bytes32,bytes32,uint256,uint256) (lib/forge-std/src/safeconsole.sol#12907-12955) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12917-12942)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12944-12954)
safeconsole.log(bytes32,bytes32,uint256,bytes32) (lib/forge-std/src/safeconsole.sol#12957-13012) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12969-12997)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#12999-13011)
safeconsole.log(bytes32,bytes32,bytes32,address) (lib/forge-std/src/safeconsole.sol#13014-13069) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#13026-13054)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#13056-13068)
safeconsole.log(bytes32,bytes32,bytes32,bool) (lib/forge-std/src/safeconsole.sol#13071-13126) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#13083-13111)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#13113-13125)
safeconsole.log(bytes32,bytes32,bytes32,uint256) (lib/forge-std/src/safeconsole.sol#13128-13183) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#13140-13168)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#13170-13182)
safeconsole.log(bytes32,bytes32,bytes32,bytes32) (lib/forge-std/src/safeconsole.sol#13185-13247) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#13199-13230)
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#13232-13246)
safeconsole.log.asm_0.writeString() (lib/forge-std/src/safeconsole.sol#13200-13206) uses assembly
	- INLINE ASM (lib/forge-std/src/safeconsole.sol#13200-13206)
Proxy._delegate(address) (lib/openzeppelin-contracts/contracts/proxy/Proxy.sol#22-45) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/proxy/Proxy.sol#23-44)
ERC721._checkOnERC721Received(address,address,uint256,bytes) (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#465-482) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#476-478)
Address._revert(bytes) (lib/openzeppelin-contracts/contracts/utils/Address.sol#146-158) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Address.sol#151-154)
Base64.encode(bytes) (lib/openzeppelin-contracts/contracts/utils/Base64.sol#18-98) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Base64.sol#37-95)
StorageSlot.getAddressSlot(bytes32) (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#59-64) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#61-63)
StorageSlot.getBooleanSlot(bytes32) (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#69-74) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#71-73)
StorageSlot.getBytes32Slot(bytes32) (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#79-84) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#81-83)
StorageSlot.getUint256Slot(bytes32) (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#89-94) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#91-93)
StorageSlot.getStringSlot(bytes32) (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#99-104) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#101-103)
StorageSlot.getStringSlot(string) (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#109-114) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#111-113)
StorageSlot.getBytesSlot(bytes32) (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#119-124) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#121-123)
StorageSlot.getBytesSlot(bytes) (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#129-134) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#131-133)
Strings.toString(uint256) (lib/openzeppelin-contracts/contracts/utils/Strings.sol#24-44) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#30-32)
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#36-38)
ERC165Checker.supportsERC165InterfaceUnchecked(address,bytes4) (lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol#108-123) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol#116-120)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#123-202) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#130-133)
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#154-161)
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#167-176)
OwnableUpgradeable._getOwnableStorage() (lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol#30-34) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol#31-33)
Initializable._getInitializableStorage() (lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol#223-227) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol#224-226)
GiveUpDeployer.deployGiveUp129(bytes32,address,uint256,string) (src/GiveUpDeployer.sol#8-36) uses assembly
	- INLINE ASM (src/GiveUpDeployer.sol#27-29)
TokenTemplate1._safeMint(address,uint256) (src/TokenTemplate1.sol#573-592) uses assembly
	- INLINE ASM (src/TokenTemplate1.sol#579-581)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
StdCheatsSafe.assumeNotBlacklisted(address,address) (lib/forge-std/src/StdCheats.sol#209-227) compares to a boolean constant:
	-vm.assume(! success || abi.decode(returnData,(bool)) == false) (lib/forge-std/src/StdCheats.sol#222)
StdCheatsSafe.assumeNotBlacklisted(address,address) (lib/forge-std/src/StdCheats.sol#209-227) compares to a boolean constant:
	-vm.assume(! success || abi.decode(returnData,(bool)) == false) (lib/forge-std/src/StdCheats.sol#226)
GiveUpLib2.singleRefund(PackedVars1,uint256,bool,Campaign,ContractFunded,MappingCampaignIdTo,mapping(address => string)) (src/lib/GLib_Base2.sol#989-1106) compares to a boolean constant:
	-keccak256(bytes)(abi.encode(fund.tokenSymbol)) == keccak256(bytes)(abi.encode(packedVars1.stringVars[0])) && fund.qty > 0 && fund.fundInfo.refunded == false && fund.tokenAddr == address(0) (src/lib/GLib_Base2.sol#1020-1021)
GiveUpLib2.singleRefund(PackedVars1,uint256,bool,Campaign,ContractFunded,MappingCampaignIdTo,mapping(address => string)) (src/lib/GLib_Base2.sol#989-1106) compares to a boolean constant:
	-keccak256(bytes)(abi.encode(fund.tokenSymbol)) != keccak256(bytes)(abi.encode(packedVars1.stringVars[0])) && fund.qty > 0 && fund.fundInfo.refunded == false (src/lib/GLib_Base2.sol#1050-1051)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
7 different versions of Solidity are used:
	- Version constraint >=0.6.2<0.9.0 is used by:
 		- lib/forge-std/src/Base.sol#2
		- lib/forge-std/src/StdAssertions.sol#2
		- lib/forge-std/src/StdChains.sol#2
		- lib/forge-std/src/StdCheats.sol#2
		- lib/forge-std/src/StdError.sol#3
		- lib/forge-std/src/StdInvariant.sol#2
		- lib/forge-std/src/StdMath.sol#2
		- lib/forge-std/src/StdStorage.sol#2
		- lib/forge-std/src/StdUtils.sol#2
		- lib/forge-std/src/Test.sol#2
		- lib/forge-std/src/Vm.sol#4
		- lib/forge-std/src/interfaces/IMulticall3.sol#2
		- lib/forge-std/src/mocks/MockERC20.sol#2
		- lib/forge-std/src/mocks/MockERC721.sol#2
		- lib/forge-std/src/safeconsole.sol#2
	- Version constraint >=0.6.0<0.9.0 is used by:
 		- lib/forge-std/src/StdJson.sol#2
		- lib/forge-std/src/StdToml.sol#2
	- Version constraint >=0.4.22<0.9.0 is used by:
 		- lib/forge-std/src/StdStyle.sol#2
		- lib/forge-std/src/console.sol#2
		- lib/forge-std/src/console2.sol#2
	- Version constraint >=0.6.2 is used by:
 		- lib/forge-std/src/interfaces/IERC165.sol#2
		- lib/forge-std/src/interfaces/IERC20.sol#2
		- lib/forge-std/src/interfaces/IERC721.sol#2
		- lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol#1
		- lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol#1
	- Version constraint ^0.8.20 is used by:
 		- lib/openzeppelin-contracts/contracts/access/Ownable.sol#4
		- lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol#4
		- lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol#3
		- lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol#4
		- lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol#4
		- lib/openzeppelin-contracts/contracts/proxy/Proxy.sol#4
		- lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol#4
		- lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#4
		- lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol#4
		- lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol#4
		- lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol#4
		- lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol#4
		- lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#4
		- lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol#4
		- lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol#4
		- lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol#4
		- lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol#4
		- lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#4
		- lib/openzeppelin-contracts/contracts/utils/Address.sol#4
		- lib/openzeppelin-contracts/contracts/utils/Base64.sol#4
		- lib/openzeppelin-contracts/contracts/utils/Context.sol#4
		- lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol#4
		- lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#5
		- lib/openzeppelin-contracts/contracts/utils/Strings.sol#4
		- lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol#4
		- lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol#4
		- lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol#4
		- lib/openzeppelin-contracts/contracts/utils/math/Math.sol#4
		- lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol#4
		- lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol#4
		- lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol#4
		- lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol#4
		- lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol#4
		- src/ContributionNFT.sol#2
		- src/GiveUpDeployer.sol#2
		- src/TokenTemplate1.sol#2
	- Version constraint >=0.5.0 is used by:
 		- lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol#1
	- Version constraint 0.8.20 is used by:
 		- src/BackerTokenInterface.sol#2
		- src/GiveUp_129.sol#3
		- src/GlobalVariables_12x.sol#2
		- src/lib/GLib_Base1.sol#3
		- src/lib/GLib_Base2.sol#3
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
GiveUpLib2.updateCampaign(uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[],Campaign) (src/lib/GLib_Base2.sol#159-280) has a high cyclomatic complexity (18).
GiveUpLib2.performRefund(PackedVars1,Campaign,string,ContractFunded,MappingCampaignIdTo,mapping(address => string)) (src/lib/GLib_Base2.sol#867-986) has a high cyclomatic complexity (16).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity
INFO:Detectors:
Version constraint >=0.6.2<0.9.0 is too complex.
 It is used by:
	- lib/forge-std/src/Base.sol#2
	- lib/forge-std/src/StdAssertions.sol#2
	- lib/forge-std/src/StdChains.sol#2
	- lib/forge-std/src/StdCheats.sol#2
	- lib/forge-std/src/StdError.sol#3
	- lib/forge-std/src/StdInvariant.sol#2
	- lib/forge-std/src/StdMath.sol#2
	- lib/forge-std/src/StdStorage.sol#2
	- lib/forge-std/src/StdUtils.sol#2
	- lib/forge-std/src/Test.sol#2
	- lib/forge-std/src/Vm.sol#4
	- lib/forge-std/src/interfaces/IMulticall3.sol#2
	- lib/forge-std/src/mocks/MockERC20.sol#2
	- lib/forge-std/src/mocks/MockERC721.sol#2
	- lib/forge-std/src/safeconsole.sol#2
Version constraint >=0.6.0<0.9.0 is too complex.
 It is used by:
	- lib/forge-std/src/StdJson.sol#2
	- lib/forge-std/src/StdToml.sol#2
Version constraint >=0.4.22<0.9.0 is too complex.
 It is used by:
	- lib/forge-std/src/StdStyle.sol#2
	- lib/forge-std/src/console.sol#2
	- lib/forge-std/src/console2.sol#2
Version constraint >=0.6.2 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- NestedCalldataArrayAbiReencodingSizeValidation
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- MissingEscapingInFormatting
	- ArraySliceDynamicallyEncodedBaseType
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow.
 It is used by:
	- lib/forge-std/src/interfaces/IERC165.sol#2
	- lib/forge-std/src/interfaces/IERC20.sol#2
	- lib/forge-std/src/interfaces/IERC721.sol#2
	- lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol#1
	- lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol#1
Version constraint ^0.8.20 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess.
 It is used by:
	- lib/openzeppelin-contracts/contracts/access/Ownable.sol#4
	- lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol#4
	- lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol#3
	- lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol#4
	- lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol#4
	- lib/openzeppelin-contracts/contracts/proxy/Proxy.sol#4
	- lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol#4
	- lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol#4
	- lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol#4
	- lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol#4
	- lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol#4
	- lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol#4
	- lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol#4
	- lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol#4
	- lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol#4
	- lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol#4
	- lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol#4
	- lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol#4
	- lib/openzeppelin-contracts/contracts/utils/Address.sol#4
	- lib/openzeppelin-contracts/contracts/utils/Base64.sol#4
	- lib/openzeppelin-contracts/contracts/utils/Context.sol#4
	- lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol#4
	- lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol#5
	- lib/openzeppelin-contracts/contracts/utils/Strings.sol#4
	- lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol#4
	- lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol#4
	- lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol#4
	- lib/openzeppelin-contracts/contracts/utils/math/Math.sol#4
	- lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol#4
	- lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol#4
	- lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol#4
	- lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol#4
	- lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol#4
	- src/ContributionNFT.sol#2
	- src/GiveUpDeployer.sol#2
	- src/TokenTemplate1.sol#2
Version constraint >=0.5.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor
	- IncorrectEventSignatureInLibraries
	- ABIEncoderV2PackedStorage.
 It is used by:
	- lib/v2-core/contracts/interfaces/IUniswapV2Factory.sol#1
Version constraint 0.8.20 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess.
 It is used by:
	- src/BackerTokenInterface.sol#2
	- src/GiveUp_129.sol#3
	- src/GlobalVariables_12x.sol#2
	- src/lib/GLib_Base1.sol#3
	- src/lib/GLib_Base2.sol#3
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in StdAssertions.assertEqCall(address,bytes,address,bytes,bool) (lib/forge-std/src/StdAssertions.sol#637-668):
	- (successA,returnDataA) = address(targetA).call(callDataA) (lib/forge-std/src/StdAssertions.sol#644)
	- (successB,returnDataB) = address(targetB).call(callDataB) (lib/forge-std/src/StdAssertions.sol#645)
Low level call in StdCheatsSafe.assumeNotBlacklisted(address,address) (lib/forge-std/src/StdCheats.sol#209-227):
	- (success,returnData) = token.staticcall(abi.encodeWithSelector(0xfe575a87,addr)) (lib/forge-std/src/StdCheats.sol#221)
	- (success,returnData) = token.staticcall(abi.encodeWithSelector(0xe47d6060,addr)) (lib/forge-std/src/StdCheats.sol#225)
Low level call in StdCheatsSafe._isPayable(address) (lib/forge-std/src/StdCheats.sol#284-300):
	- (success,None) = address(addr).call{value: 1}() (lib/forge-std/src/StdCheats.sol#293)
Low level call in StdCheats.deal(address,address,uint256,bool) (lib/forge-std/src/StdCheats.sol#728-747):
	- (None,balData) = token.staticcall(abi.encodeWithSelector(0x70a08231,to)) (lib/forge-std/src/StdCheats.sol#730)
	- (None,totSupData) = token.staticcall(abi.encodeWithSelector(0x18160ddd)) (lib/forge-std/src/StdCheats.sol#738)
Low level call in StdCheats.dealERC1155(address,address,uint256,uint256,bool) (lib/forge-std/src/StdCheats.sol#749-772):
	- (None,balData) = token.staticcall(abi.encodeWithSelector(0x00fdd58e,to,id)) (lib/forge-std/src/StdCheats.sol#751)
	- (None,totSupData) = token.staticcall(abi.encodeWithSelector(0xbd85b039,id)) (lib/forge-std/src/StdCheats.sol#759)
Low level call in StdCheats.dealERC721(address,address,uint256) (lib/forge-std/src/StdCheats.sol#774-794):
	- (successMinted,ownerData) = token.staticcall(abi.encodeWithSelector(0x6352211e,id)) (lib/forge-std/src/StdCheats.sol#776)
	- (None,fromBalData) = token.staticcall(abi.encodeWithSelector(0x70a08231,abi.decode(ownerData,(address)))) (lib/forge-std/src/StdCheats.sol#780-781)
	- (None,toBalData) = token.staticcall(abi.encodeWithSelector(0x70a08231,to)) (lib/forge-std/src/StdCheats.sol#785)
Low level call in StdCheats.deployCodeTo(string,bytes,uint256,address) (lib/forge-std/src/StdCheats.sol#804-810):
	- (success,runtimeBytecode) = where.call{value: value}() (lib/forge-std/src/StdCheats.sol#807)
Low level call in StdCheats.console2_log_StdCheats(string) (lib/forge-std/src/StdCheats.sol#813-816):
	- (status,None) = address(CONSOLE2_ADDRESS).staticcall(abi.encodeWithSignature(log(string),p0)) (lib/forge-std/src/StdCheats.sol#814)
Low level call in stdStorageSafe.callTarget(StdStorage) (lib/forge-std/src/StdStorage.sol#44-50):
	- (success,rdat) = self._target.staticcall(cald) (lib/forge-std/src/StdStorage.sol#46)
Low level call in SafeERC20._callOptionalReturnBool(IERC20,bytes) (lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol#110-117):
	- (success,returndata) = address(token).call(data) (lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol#115)
Low level call in Address.sendValue(address,uint256) (lib/openzeppelin-contracts/contracts/utils/Address.sol#41-50):
	- (success,None) = recipient.call{value: amount}() (lib/openzeppelin-contracts/contracts/utils/Address.sol#46)
Low level call in Address.functionCallWithValue(address,bytes,uint256) (lib/openzeppelin-contracts/contracts/utils/Address.sol#83-89):
	- (success,returndata) = target.call{value: value}(data) (lib/openzeppelin-contracts/contracts/utils/Address.sol#87)
Low level call in Address.functionStaticCall(address,bytes) (lib/openzeppelin-contracts/contracts/utils/Address.sol#95-98):
	- (success,returndata) = target.staticcall(data) (lib/openzeppelin-contracts/contracts/utils/Address.sol#96)
Low level call in Address.functionDelegateCall(address,bytes) (lib/openzeppelin-contracts/contracts/utils/Address.sol#104-107):
	- (success,returndata) = target.delegatecall(data) (lib/openzeppelin-contracts/contracts/utils/Address.sol#105)
Low level call in TokenTemplate1.raiserWithdrawDonationCampaignFunds() (src/TokenTemplate1.sol#332-352):
	- (success,None) = address(msg.sender).call{value: nativeTokenAmt}() (src/TokenTemplate1.sol#342)
Low level call in TokenTemplate1.withdrawWhitelistedToken(address,uint256) (src/TokenTemplate1.sol#359-368):
	- (success,None) = tokenAddr.call(abi.encodeWithSelector(ERC20.transfer.selector,msg.sender,amount)) (src/TokenTemplate1.sol#365)
Low level call in TokenTemplate1.removeInitialLiquidity(address) (src/TokenTemplate1.sol#432-537):
	- (success,None) = participant.call{value: amountETH}() (src/TokenTemplate1.sol#524)
Low level call in GiveUpLib2.createTokenContractForParticipantsSelfWithdraw(Campaign,MappingCampaignIdTo,PackedVars1,address) (src/lib/GLib_Base2.sol#348-417):
	- (success,None) = address(resultTokenAddress).call{value: nativeTokenFundAfterTax}() (src/lib/GLib_Base2.sol#414)
Low level call in GiveUpLib2.singleRefund(PackedVars1,uint256,bool,Campaign,ContractFunded,MappingCampaignIdTo,mapping(address => string)) (src/lib/GLib_Base2.sol#989-1106):
	- (success,None) = address(recipient).call{value: fund.qty}() (src/lib/GLib_Base2.sol#1029)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Constant CommonBase.vm (lib/forge-std/src/Base.sol#27) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ScriptBase.vmSafe (lib/forge-std/src/Base.sol#34) is not in UPPER_CASE_WITH_UNDERSCORES
Event StdAssertions.log(string) (lib/forge-std/src/StdAssertions.sol#10) is not in CapWords
Event StdAssertions.logs(bytes) (lib/forge-std/src/StdAssertions.sol#11) is not in CapWords
Event StdAssertions.log_address(address) (lib/forge-std/src/StdAssertions.sol#13) is not in CapWords
Event StdAssertions.log_bytes32(bytes32) (lib/forge-std/src/StdAssertions.sol#14) is not in CapWords
Event StdAssertions.log_int(int256) (lib/forge-std/src/StdAssertions.sol#15) is not in CapWords
Event StdAssertions.log_uint(uint256) (lib/forge-std/src/StdAssertions.sol#16) is not in CapWords
Event StdAssertions.log_bytes(bytes) (lib/forge-std/src/StdAssertions.sol#17) is not in CapWords
Event StdAssertions.log_string(string) (lib/forge-std/src/StdAssertions.sol#18) is not in CapWords
Event StdAssertions.log_named_address(string,address) (lib/forge-std/src/StdAssertions.sol#20) is not in CapWords
Event StdAssertions.log_named_bytes32(string,bytes32) (lib/forge-std/src/StdAssertions.sol#21) is not in CapWords
Event StdAssertions.log_named_decimal_int(string,int256,uint256) (lib/forge-std/src/StdAssertions.sol#22) is not in CapWords
Event StdAssertions.log_named_decimal_uint(string,uint256,uint256) (lib/forge-std/src/StdAssertions.sol#23) is not in CapWords
Event StdAssertions.log_named_int(string,int256) (lib/forge-std/src/StdAssertions.sol#24) is not in CapWords
Event StdAssertions.log_named_uint(string,uint256) (lib/forge-std/src/StdAssertions.sol#25) is not in CapWords
Event StdAssertions.log_named_bytes(string,bytes) (lib/forge-std/src/StdAssertions.sol#26) is not in CapWords
Event StdAssertions.log_named_string(string,string) (lib/forge-std/src/StdAssertions.sol#27) is not in CapWords
Event StdAssertions.log_array(uint256[]) (lib/forge-std/src/StdAssertions.sol#29) is not in CapWords
Event StdAssertions.log_array(int256[]) (lib/forge-std/src/StdAssertions.sol#30) is not in CapWords
Event StdAssertions.log_array(address[]) (lib/forge-std/src/StdAssertions.sol#31) is not in CapWords
Event StdAssertions.log_named_array(string,uint256[]) (lib/forge-std/src/StdAssertions.sol#32) is not in CapWords
Event StdAssertions.log_named_array(string,int256[]) (lib/forge-std/src/StdAssertions.sol#33) is not in CapWords
Event StdAssertions.log_named_array(string,address[]) (lib/forge-std/src/StdAssertions.sol#34) is not in CapWords
Constant StdAssertions.vm (lib/forge-std/src/StdAssertions.sol#8) is not in UPPER_CASE_WITH_UNDERSCORES
Constant StdChains.vm (lib/forge-std/src/StdChains.sol#35) is not in UPPER_CASE_WITH_UNDERSCORES
Constant StdCheatsSafe.vm (lib/forge-std/src/StdCheats.sol#11) is not in UPPER_CASE_WITH_UNDERSCORES
Function StdCheats.console2_log_StdCheats(string) (lib/forge-std/src/StdCheats.sol#813-816) is not in mixedCase
Constant StdCheats.vm (lib/forge-std/src/StdCheats.sol#643) is not in UPPER_CASE_WITH_UNDERSCORES
Contract stdError (lib/forge-std/src/StdError.sol#5-15) is not in CapWords
Contract stdJson (lib/forge-std/src/StdJson.sol#25-179) is not in CapWords
Constant stdJson.vm (lib/forge-std/src/StdJson.sol#26) is not in UPPER_CASE_WITH_UNDERSCORES
Contract stdMath (lib/forge-std/src/StdMath.sol#4-43) is not in CapWords
Contract stdStorageSafe (lib/forge-std/src/StdStorage.sol#24-332) is not in CapWords
Event stdStorageSafe.WARNING_UninitedSlot(address,uint256) (lib/forge-std/src/StdStorage.sol#26) is not in CapWords
Parameter stdStorageSafe.find(StdStorage,bool)._clear (lib/forge-std/src/StdStorage.sol#106) is not in mixedCase
Parameter stdStorageSafe.target(StdStorage,address)._target (lib/forge-std/src/StdStorage.sol#171) is not in mixedCase
Parameter stdStorageSafe.sig(StdStorage,bytes4)._sig (lib/forge-std/src/StdStorage.sol#176) is not in mixedCase
Parameter stdStorageSafe.sig(StdStorage,string)._sig (lib/forge-std/src/StdStorage.sol#181) is not in mixedCase
Function stdStorageSafe.with_calldata(StdStorage,bytes) (lib/forge-std/src/StdStorage.sol#186-189) is not in mixedCase
Parameter stdStorageSafe.with_calldata(StdStorage,bytes)._calldata (lib/forge-std/src/StdStorage.sol#186) is not in mixedCase
Function stdStorageSafe.with_key(StdStorage,address) (lib/forge-std/src/StdStorage.sol#191-194) is not in mixedCase
Function stdStorageSafe.with_key(StdStorage,uint256) (lib/forge-std/src/StdStorage.sol#196-199) is not in mixedCase
Function stdStorageSafe.with_key(StdStorage,bytes32) (lib/forge-std/src/StdStorage.sol#201-204) is not in mixedCase
Function stdStorageSafe.enable_packed_slots(StdStorage) (lib/forge-std/src/StdStorage.sol#206-209) is not in mixedCase
Parameter stdStorageSafe.depth(StdStorage,uint256)._depth (lib/forge-std/src/StdStorage.sol#211) is not in mixedCase
Function stdStorageSafe.read_bytes32(StdStorage) (lib/forge-std/src/StdStorage.sol#224-226) is not in mixedCase
Function stdStorageSafe.read_bool(StdStorage) (lib/forge-std/src/StdStorage.sol#228-233) is not in mixedCase
Function stdStorageSafe.read_address(StdStorage) (lib/forge-std/src/StdStorage.sol#235-237) is not in mixedCase
Function stdStorageSafe.read_uint(StdStorage) (lib/forge-std/src/StdStorage.sol#239-241) is not in mixedCase
Function stdStorageSafe.read_int(StdStorage) (lib/forge-std/src/StdStorage.sol#243-245) is not in mixedCase
Constant stdStorageSafe.vm (lib/forge-std/src/StdStorage.sol#28) is not in UPPER_CASE_WITH_UNDERSCORES
Contract stdStorage (lib/forge-std/src/StdStorage.sol#334-473) is not in CapWords
Parameter stdStorage.find(StdStorage,bool)._clear (lib/forge-std/src/StdStorage.sol#345) is not in mixedCase
Parameter stdStorage.target(StdStorage,address)._target (lib/forge-std/src/StdStorage.sol#349) is not in mixedCase
Parameter stdStorage.sig(StdStorage,bytes4)._sig (lib/forge-std/src/StdStorage.sol#353) is not in mixedCase
Parameter stdStorage.sig(StdStorage,string)._sig (lib/forge-std/src/StdStorage.sol#357) is not in mixedCase
Function stdStorage.with_key(StdStorage,address) (lib/forge-std/src/StdStorage.sol#361-363) is not in mixedCase
Function stdStorage.with_key(StdStorage,uint256) (lib/forge-std/src/StdStorage.sol#365-367) is not in mixedCase
Function stdStorage.with_key(StdStorage,bytes32) (lib/forge-std/src/StdStorage.sol#369-371) is not in mixedCase
Function stdStorage.with_calldata(StdStorage,bytes) (lib/forge-std/src/StdStorage.sol#373-375) is not in mixedCase
Parameter stdStorage.with_calldata(StdStorage,bytes)._calldata (lib/forge-std/src/StdStorage.sol#373) is not in mixedCase
Function stdStorage.enable_packed_slots(StdStorage) (lib/forge-std/src/StdStorage.sol#377-379) is not in mixedCase
Parameter stdStorage.depth(StdStorage,uint256)._depth (lib/forge-std/src/StdStorage.sol#381) is not in mixedCase
Function stdStorage.checked_write(StdStorage,address) (lib/forge-std/src/StdStorage.sol#389-391) is not in mixedCase
Function stdStorage.checked_write(StdStorage,uint256) (lib/forge-std/src/StdStorage.sol#393-395) is not in mixedCase
Function stdStorage.checked_write_int(StdStorage,int256) (lib/forge-std/src/StdStorage.sol#397-399) is not in mixedCase
Function stdStorage.checked_write(StdStorage,bool) (lib/forge-std/src/StdStorage.sol#401-408) is not in mixedCase
Function stdStorage.checked_write(StdStorage,bytes32) (lib/forge-std/src/StdStorage.sol#410-444) is not in mixedCase
Function stdStorage.read_bytes32(StdStorage) (lib/forge-std/src/StdStorage.sol#446-448) is not in mixedCase
Function stdStorage.read_bool(StdStorage) (lib/forge-std/src/StdStorage.sol#450-452) is not in mixedCase
Function stdStorage.read_address(StdStorage) (lib/forge-std/src/StdStorage.sol#454-456) is not in mixedCase
Function stdStorage.read_uint(StdStorage) (lib/forge-std/src/StdStorage.sol#458-460) is not in mixedCase
Function stdStorage.read_int(StdStorage) (lib/forge-std/src/StdStorage.sol#462-464) is not in mixedCase
Constant stdStorage.vm (lib/forge-std/src/StdStorage.sol#335) is not in UPPER_CASE_WITH_UNDERSCORES
Constant StdStyle.vm (lib/forge-std/src/StdStyle.sol#7) is not in UPPER_CASE_WITH_UNDERSCORES
Contract stdToml (lib/forge-std/src/StdToml.sol#25-179) is not in CapWords
Constant stdToml.vm (lib/forge-std/src/StdToml.sol#26) is not in UPPER_CASE_WITH_UNDERSCORES
Function StdUtils.console2_log_StdUtils(string) (lib/forge-std/src/StdUtils.sol#215-217) is not in mixedCase
Function StdUtils.console2_log_StdUtils(string,uint256) (lib/forge-std/src/StdUtils.sol#219-221) is not in mixedCase
Function StdUtils.console2_log_StdUtils(string,string) (lib/forge-std/src/StdUtils.sol#223-225) is not in mixedCase
Constant StdUtils.multicall (lib/forge-std/src/StdUtils.sol#16) is not in UPPER_CASE_WITH_UNDERSCORES
Constant StdUtils.vm (lib/forge-std/src/StdUtils.sol#17) is not in UPPER_CASE_WITH_UNDERSCORES
Variable Test.IS_TEST (lib/forge-std/src/Test.sol#32) is not in mixedCase
Function VmSafe.eth_getLogs(uint256,uint256,address,bytes32[]) (lib/forge-std/src/Vm.sol#371-373) is not in mixedCase
Contract console (lib/forge-std/src/console.sol#4-1534) is not in CapWords
Contract console2 (lib/forge-std/src/console2.sol#9-1559) is not in CapWords
Function MockERC20.DOMAIN_SEPARATOR() (lib/forge-std/src/mocks/MockERC20.sol#160-162) is not in mixedCase
Variable MockERC20.INITIAL_CHAIN_ID (lib/forge-std/src/mocks/MockERC20.sol#57) is not in mixedCase
Variable MockERC20.INITIAL_DOMAIN_SEPARATOR (lib/forge-std/src/mocks/MockERC20.sol#59) is not in mixedCase
Contract safeconsole (lib/forge-std/src/safeconsole.sol#6-13248) is not in CapWords
Parameter safeconsole.log.asm_0.writeString().pos_log_asm_0_writeString (lib/forge-std/src/safeconsole.sol#13200) is not in mixedCase
Parameter safeconsole.log.asm_0.writeString().w_log_asm_0_writeString (lib/forge-std/src/safeconsole.sol#13200) is not in mixedCase
Function IERC20Permit.DOMAIN_SEPARATOR() (lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol#89) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init(address) (lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol#51-53) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init_unchained(address) (lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol#55-60) is not in mixedCase
Constant OwnableUpgradeable.OwnableStorageLocation (lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol#28) is not in UPPER_CASE_WITH_UNDERSCORES
Function UUPSUpgradeable.__UUPSUpgradeable_init() (lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol#65-66) is not in mixedCase
Function UUPSUpgradeable.__UUPSUpgradeable_init_unchained() (lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol#68-69) is not in mixedCase
Variable UUPSUpgradeable.__self (lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol#22) is not in mixedCase
Function ContextUpgradeable.__Context_init() (lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol#18-19) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol#21-22) is not in mixedCase
Function IUniswapV2Router01.WETH() (lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol#5) is not in mixedCase
Parameter GiveUpDeployer.deployGiveUp129(bytes32,address,uint256,string)._salt (src/GiveUpDeployer.sol#9) is not in mixedCase
Parameter GiveUpDeployer.deployGiveUp129(bytes32,address,uint256,string)._implementation (src/GiveUpDeployer.sol#10) is not in mixedCase
Parameter GiveUpDeployer.deployGiveUp129(bytes32,address,uint256,string)._platformFee (src/GiveUpDeployer.sol#11) is not in mixedCase
Parameter GiveUpDeployer.deployGiveUp129(bytes32,address,uint256,string)._nativeTokenSymbol (src/GiveUpDeployer.sol#12) is not in mixedCase
Parameter GiveUpDeployer.getGiveUp129Address(bytes32,address,uint256,string)._salt (src/GiveUpDeployer.sol#40) is not in mixedCase
Parameter GiveUpDeployer.getGiveUp129Address(bytes32,address,uint256,string)._implementation (src/GiveUpDeployer.sol#41) is not in mixedCase
Parameter GiveUpDeployer.getGiveUp129Address(bytes32,address,uint256,string)._platformFee (src/GiveUpDeployer.sol#42) is not in mixedCase
Parameter GiveUpDeployer.getGiveUp129Address(bytes32,address,uint256,string)._nativeTokenSymbol (src/GiveUpDeployer.sol#43) is not in mixedCase
Parameter GiveUp129.initialize(uint256,string)._campaignTax (src/GiveUp_129.sol#156) is not in mixedCase
Parameter GiveUp129.initialize(uint256,string)._nativeTokenSymbol (src/GiveUp_129.sol#156) is not in mixedCase
Parameter GiveUp129.setCampaignFinalTokenNameAndSymbol(string,string,uint256)._name (src/GiveUp_129.sol#186) is not in mixedCase
Parameter GiveUp129.setCampaignFinalTokenNameAndSymbol(string,string,uint256)._symbol (src/GiveUp_129.sol#186) is not in mixedCase
Parameter GiveUp129.setCampaignFinalTokenNameAndSymbol(string,string,uint256)._forCampaignId (src/GiveUp_129.sol#186) is not in mixedCase
Parameter GiveUp129.raiserChangeAlchemist(uint256,address)._id (src/GiveUp_129.sol#209) is not in mixedCase
Parameter GiveUp129.raiserChangeAlchemist(uint256,address)._alchemistAddr (src/GiveUp_129.sol#209) is not in mixedCase
Parameter GiveUp129.turnOffCommunityProposeAlchemist(uint256)._id (src/GiveUp_129.sol#224) is not in mixedCase
Parameter GiveUp129.communityProposeAlchemist(uint256,address)._id (src/GiveUp_129.sol#238) is not in mixedCase
Parameter GiveUp129.communityProposeAlchemist(uint256,address)._alchemistAddr (src/GiveUp_129.sol#238) is not in mixedCase
Parameter GiveUp129.approveAlchemist(uint256,bool,string)._id (src/GiveUp_129.sol#260) is not in mixedCase
Parameter GiveUp129.approveAlchemist(uint256,bool,string)._vetoFraudCampaign (src/GiveUp_129.sol#260) is not in mixedCase
Parameter GiveUp129.approveAlchemist(uint256,bool,string)._proof (src/GiveUp_129.sol#260) is not in mixedCase
Parameter GiveUp129.setCommunityAddress(uint256,address,string)._campaignId (src/GiveUp_129.sol#275) is not in mixedCase
Parameter GiveUp129.setCommunityAddress(uint256,address,string)._communityAddr (src/GiveUp_129.sol#275) is not in mixedCase
Parameter GiveUp129.setCommunityAddress(uint256,address,string)._proofOption (src/GiveUp_129.sol#275) is not in mixedCase
Parameter GiveUp129.resetTokenSymbol(uint256)._campaignId (src/GiveUp_129.sol#286) is not in mixedCase
Parameter GiveUp129.signAcceptance(uint256,string)._id (src/GiveUp_129.sol#298) is not in mixedCase
Parameter GiveUp129.signAcceptance(uint256,string)._acceptance (src/GiveUp_129.sol#298) is not in mixedCase
Parameter GiveUp129.backerAddFraudReport(uint256,string)._id (src/GiveUp_129.sol#308) is not in mixedCase
Parameter GiveUp129.backerAddFraudReport(uint256,string)._fraudProof (src/GiveUp_129.sol#308) is not in mixedCase
Parameter GiveUp129.backerRemoveFraudReport(uint256,string)._id (src/GiveUp_129.sol#328) is not in mixedCase
Parameter GiveUp129.backerRemoveFraudReport(uint256,string)._reason (src/GiveUp_129.sol#328) is not in mixedCase
Parameter GiveUp129.addWhiteListToken(address,string)._tokenAddress (src/GiveUp_129.sol#342) is not in mixedCase
Parameter GiveUp129.addWhiteListToken(address,string)._tokenPriority (src/GiveUp_129.sol#342) is not in mixedCase
Parameter GiveUp129.removeWhiteListToken(address)._tokenAddress (src/GiveUp_129.sol#367) is not in mixedCase
Parameter GiveUp129.createCampaign(uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,address)._haveFundTarget (src/GiveUp_129.sol#425) is not in mixedCase
Parameter GiveUp129.createCampaign(uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,address)._content (src/GiveUp_129.sol#426) is not in mixedCase
Parameter GiveUp129.createCampaign(uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,address)._options (src/GiveUp_129.sol#427) is not in mixedCase
Parameter GiveUp129.createCampaign(uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,address)._timeline (src/GiveUp_129.sol#428) is not in mixedCase
Parameter GiveUp129.createCampaign(uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,address)._group (src/GiveUp_129.sol#429) is not in mixedCase
Parameter GiveUp129.createCampaign(uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,address)._deList (src/GiveUp_129.sol#430) is not in mixedCase
Parameter GiveUp129.createCampaign(uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,address)._fund (src/GiveUp_129.sol#431) is not in mixedCase
Parameter GiveUp129.createCampaign(uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,address)._pctForBackers (src/GiveUp_129.sol#432) is not in mixedCase
Parameter GiveUp129.createCampaign(uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,address)._alchemistAddr (src/GiveUp_129.sol#433) is not in mixedCase
Parameter GiveUp129.updateCampaign(uint256,uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[])._id (src/GiveUp_129.sol#481) is not in mixedCase
Parameter GiveUp129.updateCampaign(uint256,uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[])._haveFundTarget (src/GiveUp_129.sol#482) is not in mixedCase
Parameter GiveUp129.updateCampaign(uint256,uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[])._pctForBackers (src/GiveUp_129.sol#483) is not in mixedCase
Parameter GiveUp129.updateCampaign(uint256,uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[])._stringFields (src/GiveUp_129.sol#484) is not in mixedCase
Parameter GiveUp129.updateCampaign(uint256,uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[])._intFields (src/GiveUp_129.sol#485) is not in mixedCase
Parameter GiveUp129.updateCampaign(uint256,uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[])._arrayFields (src/GiveUp_129.sol#486) is not in mixedCase
Parameter GiveUp129.updateCampaign(uint256,uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[])._stringValues (src/GiveUp_129.sol#487) is not in mixedCase
Parameter GiveUp129.updateCampaign(uint256,uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[])._uintValues (src/GiveUp_129.sol#488) is not in mixedCase
Parameter GiveUp129.updateCampaign(uint256,uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[])._group (src/GiveUp_129.sol#489) is not in mixedCase
Parameter GiveUp129.updateCampaign(uint256,uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[])._deList (src/GiveUp_129.sol#490) is not in mixedCase
Parameter GiveUp129.deleteCampaign(uint256)._id (src/GiveUp_129.sol#519) is not in mixedCase
Parameter GiveUp129.donateToCampaign(uint256,uint256,uint256)._id (src/GiveUp_129.sol#557) is not in mixedCase
Parameter GiveUp129.donateToCampaign(uint256,uint256,uint256)._option (src/GiveUp_129.sol#563) is not in mixedCase
Parameter GiveUp129.donateToCampaign(uint256,uint256,uint256)._feedback (src/GiveUp_129.sol#564) is not in mixedCase
Parameter GiveUp129.donateWhiteListTokenToCampaign(uint256,uint256,uint256,address,uint256)._id (src/GiveUp_129.sol#665) is not in mixedCase
Parameter GiveUp129.donateWhiteListTokenToCampaign(uint256,uint256,uint256,address,uint256)._option (src/GiveUp_129.sol#666) is not in mixedCase
Parameter GiveUp129.donateWhiteListTokenToCampaign(uint256,uint256,uint256,address,uint256)._tokenAddr (src/GiveUp_129.sol#668) is not in mixedCase
Parameter GiveUp129.requestRefund(uint256,bool,uint256)._id (src/GiveUp_129.sol#807) is not in mixedCase
Parameter GiveUp129.requestRefund(uint256,bool,uint256)._earlyWithdraw (src/GiveUp_129.sol#808) is not in mixedCase
Parameter GiveUp129.requestRefund(uint256,bool,uint256)._voteOption (src/GiveUp_129.sol#809) is not in mixedCase
Parameter GiveUp129.payOutCampaign(uint256)._id (src/GiveUp_129.sol#865) is not in mixedCase
Parameter GiveUp129.claimTokenToBacker(uint256)._id (src/GiveUp_129.sol#902) is not in mixedCase
Parameter GiveUp129.changeTax(uint256)._taxPct (src/GiveUp_129.sol#913) is not in mixedCase
Parameter GiveUp129.changePenaltyContract(address)._newContract (src/GiveUp_129.sol#919) is not in mixedCase
Parameter GiveUp129.changeDelayBlockNumberToPreventFrontRun(uint256)._delayBlockNumber (src/GiveUp_129.sol#927) is not in mixedCase
Parameter GiveUp129.changeRulerAddr(address)._newAddr (src/GiveUp_129.sol#932) is not in mixedCase
Parameter GiveUp129.getIsTokenWhitelisted(address)._tokenAddress (src/GiveUp_129.sol#950) is not in mixedCase
Parameter GiveUp129.getTokenAddrToPriority(address)._tokenAddress (src/GiveUp_129.sol#958) is not in mixedCase
Parameter GiveUp129.getPriorityToTokenAddr(string)._tokenPriority (src/GiveUp_129.sol#962) is not in mixedCase
Parameter GiveUp129.getRemainMappingCampaignIdTo(uint256)._id (src/GiveUp_129.sol#1016) is not in mixedCase
Parameter GiveUp129.getRateDetail(uint256,uint256)._campaignId (src/GiveUp_129.sol#1042) is not in mixedCase
Parameter GiveUp129.getRateDetail(uint256,uint256)._rateIndex (src/GiveUp_129.sol#1042) is not in mixedCase
Parameter GiveUp129.getRateDetailOfFraudReport(uint256,uint256)._campaignId (src/GiveUp_129.sol#1049) is not in mixedCase
Parameter GiveUp129.getRateDetailOfFraudReport(uint256,uint256)._fraudReportId (src/GiveUp_129.sol#1049) is not in mixedCase
Parameter GiveUp129.getBackerFraudReport(uint256,address)._campaignId (src/GiveUp_129.sol#1058) is not in mixedCase
Parameter GiveUp129.getBackerFraudReport(uint256,address)._backer (src/GiveUp_129.sol#1058) is not in mixedCase
Parameter GiveUp129.getBackersOfCampaign(uint256,bool)._id (src/GiveUp_129.sol#1066) is not in mixedCase
Parameter GiveUp129.getCampaignContributionsFromBacker(uint256,address,bool)._id (src/GiveUp_129.sol#1071) is not in mixedCase
Parameter GiveUp129.getCampaignContributionsFromBacker(uint256,address,bool)._backer (src/GiveUp_129.sol#1071) is not in mixedCase
Parameter GiveUp129.getCampaignContributionsFromBacker(uint256,address,bool)._refunded (src/GiveUp_129.sol#1071) is not in mixedCase
Parameter GiveUp129.getBackerNativeTokenContribution(address,uint256)._backerAddr (src/GiveUp_129.sol#1087) is not in mixedCase
Parameter GiveUp129.getBackerNativeTokenContribution(address,uint256)._campaignId (src/GiveUp_129.sol#1087) is not in mixedCase
Variable GiveUp129.i_nativeTokenSymbol (src/GiveUp_129.sol#54) is not in mixedCase
Variable GiveUp129.WLAddresses (src/GiveUp_129.sol#86) is not in mixedCase
Parameter TokenTemplate1.initWhiteListTokenAddr(uint256,address)._tokenPriority (src/TokenTemplate1.sol#235) is not in mixedCase
Parameter TokenTemplate1.initWhiteListTokenAddr(uint256,address)._addr (src/TokenTemplate1.sol#235) is not in mixedCase
Parameter TokenTemplate1.transferOperator(address)._newOperator (src/TokenTemplate1.sol#251) is not in mixedCase
Function TokenTemplate1.addInitialLiquidityETH_1() (src/TokenTemplate1.sol#261-286) is not in mixedCase
Parameter TokenTemplate1.swapWLTokenToNativeToken(address,uint256)._tokenAddr (src/TokenTemplate1.sol#376) is not in mixedCase
Parameter TokenTemplate1.swapWLTokenToNativeToken(address,uint256)._amount (src/TokenTemplate1.sol#376) is not in mixedCase
Parameter TokenTemplate1.getBackerNativeTokenContribution(address)._backerAddr (src/TokenTemplate1.sol#411) is not in mixedCase
Parameter TokenTemplate1.setContributionNFTAddress(address)._contributionNFTAddress (src/TokenTemplate1.sol#540) is not in mixedCase
Parameter TokenTemplate1.getBackerIndex(address)._backer (src/TokenTemplate1.sol#569) is not in mixedCase
Variable TokenTemplate1.WETH (src/TokenTemplate1.sol#33) is not in mixedCase
Variable TokenTemplate1.i_contractOwner (src/TokenTemplate1.sol#44) is not in mixedCase
Variable TokenTemplate1.i_realNativeTokenReceived (src/TokenTemplate1.sol#45) is not in mixedCase
Parameter GiveUpLib1.calculateTax(uint256,uint256)._amount (src/lib/GLib_Base1.sol#38) is not in mixedCase
Parameter GiveUpLib1.calculateTax(uint256,uint256)._campaignTax (src/lib/GLib_Base1.sol#38) is not in mixedCase
Parameter GiveUpLib1.backerReportFraud(uint256,bool,string,mapping(uint256 => Campaign),mapping(uint256 => MappingCampaignIdTo),mapping(uint256 => mapping(uint256 => RateDetail)),mapping(uint256 => mapping(address => FraudReport)))._id (src/lib/GLib_Base1.sol#395) is not in mixedCase
Parameter GiveUpLib1.backerReportFraud(uint256,bool,string,mapping(uint256 => Campaign),mapping(uint256 => MappingCampaignIdTo),mapping(uint256 => mapping(uint256 => RateDetail)),mapping(uint256 => mapping(address => FraudReport)))._isFraud (src/lib/GLib_Base1.sol#396) is not in mixedCase
Parameter GiveUpLib1.backerReportFraud(uint256,bool,string,mapping(uint256 => Campaign),mapping(uint256 => MappingCampaignIdTo),mapping(uint256 => mapping(uint256 => RateDetail)),mapping(uint256 => mapping(address => FraudReport)))._reportProof (src/lib/GLib_Base1.sol#397) is not in mixedCase
Parameter GiveUpLib1.setCampaignFinalTokenNameAndSymbol(string,string,uint256,mapping(uint256 => MappingCampaignIdTo),Campaign,address)._name (src/lib/GLib_Base1.sol#448) is not in mixedCase
Parameter GiveUpLib1.setCampaignFinalTokenNameAndSymbol(string,string,uint256,mapping(uint256 => MappingCampaignIdTo),Campaign,address)._symbol (src/lib/GLib_Base1.sol#449) is not in mixedCase
Parameter GiveUpLib1.setCampaignFinalTokenNameAndSymbol(string,string,uint256,mapping(uint256 => MappingCampaignIdTo),Campaign,address)._forCampaignId (src/lib/GLib_Base1.sol#450) is not in mixedCase
Parameter GiveUpLib1.setCampaignFinalTokenNameAndSymbol(string,string,uint256,mapping(uint256 => MappingCampaignIdTo),Campaign,address)._setter (src/lib/GLib_Base1.sol#453) is not in mixedCase
Parameter GiveUpLib2.convertAddressToString(address)._address (src/lib/GLib_Base2.sol#26) is not in mixedCase
Parameter GiveUpLib2.addOptionsVoted(uint256,uint256,string,mapping(uint256 => mapping(address => mapping(uint256 => VoteData))),mapping(uint256 => mapping(uint256 => address)),Campaign)._id (src/lib/GLib_Base2.sol#40) is not in mixedCase
Parameter GiveUpLib2.addOptionsVoted(uint256,uint256,string,mapping(uint256 => mapping(address => mapping(uint256 => VoteData))),mapping(uint256 => mapping(uint256 => address)),Campaign)._option (src/lib/GLib_Base2.sol#41) is not in mixedCase
Parameter GiveUpLib2.addOptionsVoted(uint256,uint256,string,mapping(uint256 => mapping(address => mapping(uint256 => VoteData))),mapping(uint256 => mapping(uint256 => address)),Campaign)._tokenSymbol (src/lib/GLib_Base2.sol#42) is not in mixedCase
Parameter GiveUpLib2.updateCampaignUintFields(uint256,string[],uint256[],Campaign,uint256,uint256)._uintFields (src/lib/GLib_Base2.sol#85) is not in mixedCase
Parameter GiveUpLib2.updateCampaignUintFields(uint256,string[],uint256[],Campaign,uint256,uint256)._uintValues (src/lib/GLib_Base2.sol#86) is not in mixedCase
Parameter GiveUpLib2.updateCampaign(uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[],Campaign)._stringFields (src/lib/GLib_Base2.sol#162) is not in mixedCase
Parameter GiveUpLib2.updateCampaign(uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[],Campaign)._uintFields (src/lib/GLib_Base2.sol#163) is not in mixedCase
Parameter GiveUpLib2.updateCampaign(uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[],Campaign)._arrayFields (src/lib/GLib_Base2.sol#164) is not in mixedCase
Parameter GiveUpLib2.updateCampaign(uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[],Campaign)._stringValues (src/lib/GLib_Base2.sol#165) is not in mixedCase
Parameter GiveUpLib2.updateCampaign(uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[],Campaign)._uintValues (src/lib/GLib_Base2.sol#166) is not in mixedCase
Parameter GiveUpLib2.updateCampaign(uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[],Campaign)._group (src/lib/GLib_Base2.sol#167) is not in mixedCase
Parameter GiveUpLib2.updateCampaign(uint256,uint256,string[],string[],string[],string[],uint256[],uint256[],uint256[],Campaign)._deList (src/lib/GLib_Base2.sol#168) is not in mixedCase
Parameter GiveUpLib2.createCampaign(uint256,uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,Campaign)._haveFundTarget (src/lib/GLib_Base2.sol#493) is not in mixedCase
Parameter GiveUpLib2.createCampaign(uint256,uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,Campaign)._pctForBackers (src/lib/GLib_Base2.sol#494) is not in mixedCase
Parameter GiveUpLib2.createCampaign(uint256,uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,Campaign)._content (src/lib/GLib_Base2.sol#495) is not in mixedCase
Parameter GiveUpLib2.createCampaign(uint256,uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,Campaign)._options (src/lib/GLib_Base2.sol#496) is not in mixedCase
Parameter GiveUpLib2.createCampaign(uint256,uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,Campaign)._timeline (src/lib/GLib_Base2.sol#497) is not in mixedCase
Parameter GiveUpLib2.createCampaign(uint256,uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,Campaign)._group (src/lib/GLib_Base2.sol#498) is not in mixedCase
Parameter GiveUpLib2.createCampaign(uint256,uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,Campaign)._deList (src/lib/GLib_Base2.sol#499) is not in mixedCase
Parameter GiveUpLib2.createCampaign(uint256,uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,Campaign)._fund (src/lib/GLib_Base2.sol#500) is not in mixedCase
Parameter GiveUpLib2.createCampaign(uint256,uint256,string[],string[],uint256[],uint256[],uint256[],uint256[],uint256,Campaign)._id (src/lib/GLib_Base2.sol#501) is not in mixedCase
Parameter GiveUpLib2.signAcceptance(Campaign,address,string)._acceptance (src/lib/GLib_Base2.sol#548) is not in mixedCase
Parameter GiveUpLib2.removeOptionsVoted(uint256,uint256,mapping(uint256 => mapping(address => mapping(uint256 => VoteData))),mapping(uint256 => mapping(uint256 => address)),Campaign)._id (src/lib/GLib_Base2.sol#571) is not in mixedCase
Parameter GiveUpLib2.removeOptionsVoted(uint256,uint256,mapping(uint256 => mapping(address => mapping(uint256 => VoteData))),mapping(uint256 => mapping(uint256 => address)),Campaign)._voteOption (src/lib/GLib_Base2.sol#572) is not in mixedCase
Parameter GiveUpLib2.performRefund(PackedVars1,Campaign,string,ContractFunded,MappingCampaignIdTo,mapping(address => string))._reason (src/lib/GLib_Base2.sol#870) is not in mixedCase
Parameter GiveUpLib2.singleRefund(PackedVars1,uint256,bool,Campaign,ContractFunded,MappingCampaignIdTo,mapping(address => string))._earlyWithdraw (src/lib/GLib_Base2.sol#992) is not in mixedCase
Parameter GiveUpLib2.refundCompleted(string,Campaign,ContractFunded)._reason (src/lib/GLib_Base2.sol#1116) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Redundant expression "status (lib/forge-std/src/StdCheats.sol#815)" inStdCheats (lib/forge-std/src/StdCheats.sol#639-817)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements
INFO:Detectors:
Variable StdAssertions.assertEqCall(address,bytes,address,bytes,bool).returnDataA (lib/forge-std/src/StdAssertions.sol#644) is too similar to StdAssertions.assertEqCall(address,bytes,address,bytes,bool).returnDataB (lib/forge-std/src/StdAssertions.sol#645)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#251) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#270)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#258) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#270)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#269) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#270)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#251) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#251)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#251) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#259)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#258) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#259)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#269) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#271)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#251) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#271)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#258) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#271)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#251) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#260)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#258) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#260)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#269) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#260)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#251) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType4 (lib/forge-std/src/StdCheats.sol#272)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#258) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType4 (lib/forge-std/src/StdCheats.sol#272)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#269) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType4 (lib/forge-std/src/StdCheats.sol#272)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#258) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#251)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#269) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#259)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType1 (lib/forge-std/src/StdCheats.sol#269) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#251)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#251) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#271)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#259) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#260)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#251) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#260)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#270) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#271)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#259) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#271)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#270) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType4 (lib/forge-std/src/StdCheats.sol#272)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#259) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType4 (lib/forge-std/src/StdCheats.sol#272)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#251) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType4 (lib/forge-std/src/StdCheats.sol#272)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType2 (lib/forge-std/src/StdCheats.sol#270) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#260)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#271) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType4 (lib/forge-std/src/StdCheats.sol#272)
Variable StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType3 (lib/forge-std/src/StdCheats.sol#260) is too similar to StdCheatsSafe.assumeAddressIsNot(address,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType,StdCheatsSafe.AddressType).addressType4 (lib/forge-std/src/StdCheats.sol#272)
Variable StdInvariant._excludedSenders (lib/forge-std/src/StdInvariant.sol#18) is too similar to StdInvariant.excludeSenders().excludedSenders_ (lib/forge-std/src/StdInvariant.sol#80)
Variable StdInvariant._targetedInterfaces (lib/forge-std/src/StdInvariant.sol#28) is too similar to StdInvariant.targetInterfaces().targetedInterfaces_ (lib/forge-std/src/StdInvariant.sol#104)
Variable StdInvariant._targetedSelectors (lib/forge-std/src/StdInvariant.sol#26) is too similar to StdInvariant.targetSelectors().targetedSelectors_ (lib/forge-std/src/StdInvariant.sol#96)
Variable StdInvariant._targetedSenders (lib/forge-std/src/StdInvariant.sol#20) is too similar to StdInvariant.targetSenders().targetedSenders_ (lib/forge-std/src/StdInvariant.sol#100)
Variable StdInvariant._excludedArtifacts (lib/forge-std/src/StdInvariant.sol#22) is too similar to StdInvariant.excludeArtifacts().excludedArtifacts_ (lib/forge-std/src/StdInvariant.sol#72)
Variable StdInvariant._excludedContracts (lib/forge-std/src/StdInvariant.sol#17) is too similar to StdInvariant.excludeContracts().excludedContracts_ (lib/forge-std/src/StdInvariant.sol#76)
Variable StdInvariant._targetedArtifactSelectors (lib/forge-std/src/StdInvariant.sol#25) is too similar to StdInvariant.targetArtifactSelectors().targetedArtifactSelectors_ (lib/forge-std/src/StdInvariant.sol#88)
Variable StdInvariant._targetedArtifacts (lib/forge-std/src/StdInvariant.sol#23) is too similar to StdInvariant.targetArtifacts().targetedArtifacts_ (lib/forge-std/src/StdInvariant.sol#84)
Variable StdInvariant._targetedContracts (lib/forge-std/src/StdInvariant.sol#19) is too similar to StdInvariant.targetContracts().targetedContracts_ (lib/forge-std/src/StdInvariant.sol#92)
Variable Vm.expectEmit(bool,bool,bool,bool,address).checkTopic1 (lib/forge-std/src/Vm.sol#1604) is too similar to Vm.expectEmit(bool,bool,bool,bool,address).checkTopic2 (lib/forge-std/src/Vm.sol#1604)
Variable Vm.expectEmit(bool,bool,bool,bool).checkTopic1 (lib/forge-std/src/Vm.sol#1601) is too similar to Vm.expectEmit(bool,bool,bool,bool).checkTopic2 (lib/forge-std/src/Vm.sol#1601)
Variable Vm.expectEmit(bool,bool,bool,bool).checkTopic1 (lib/forge-std/src/Vm.sol#1601) is too similar to Vm.expectEmit(bool,bool,bool,bool,address).checkTopic2 (lib/forge-std/src/Vm.sol#1604)
Variable Vm.expectEmit(bool,bool,bool,bool,address).checkTopic1 (lib/forge-std/src/Vm.sol#1604) is too similar to Vm.expectEmit(bool,bool,bool,bool).checkTopic3 (lib/forge-std/src/Vm.sol#1601)
Variable Vm.expectEmit(bool,bool,bool,bool).checkTopic1 (lib/forge-std/src/Vm.sol#1601) is too similar to Vm.expectEmit(bool,bool,bool,bool,address).checkTopic3 (lib/forge-std/src/Vm.sol#1604)
Variable Vm.expectEmit(bool,bool,bool,bool,address).checkTopic1 (lib/forge-std/src/Vm.sol#1604) is too similar to Vm.expectEmit(bool,bool,bool,bool,address).checkTopic3 (lib/forge-std/src/Vm.sol#1604)
Variable Vm.expectEmit(bool,bool,bool,bool).checkTopic1 (lib/forge-std/src/Vm.sol#1601) is too similar to Vm.expectEmit(bool,bool,bool,bool).checkTopic3 (lib/forge-std/src/Vm.sol#1601)
Variable Vm.expectEmit(bool,bool,bool,bool,address).checkTopic1 (lib/forge-std/src/Vm.sol#1604) is too similar to Vm.expectEmit(bool,bool,bool,bool).checkTopic2 (lib/forge-std/src/Vm.sol#1601)
Variable Vm.expectEmit(bool,bool,bool,bool).checkTopic2 (lib/forge-std/src/Vm.sol#1601) is too similar to Vm.expectEmit(bool,bool,bool,bool,address).checkTopic3 (lib/forge-std/src/Vm.sol#1604)
Variable Vm.expectEmit(bool,bool,bool,bool,address).checkTopic2 (lib/forge-std/src/Vm.sol#1604) is too similar to Vm.expectEmit(bool,bool,bool,bool,address).checkTopic3 (lib/forge-std/src/Vm.sol#1604)
Variable Vm.expectEmit(bool,bool,bool,bool).checkTopic2 (lib/forge-std/src/Vm.sol#1601) is too similar to Vm.expectEmit(bool,bool,bool,bool).checkTopic3 (lib/forge-std/src/Vm.sol#1601)
Variable Vm.expectEmit(bool,bool,bool,bool,address).checkTopic2 (lib/forge-std/src/Vm.sol#1604) is too similar to Vm.expectEmit(bool,bool,bool,bool).checkTopic3 (lib/forge-std/src/Vm.sol#1601)
Variable IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountADesired (lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol#10) is too similar to IUniswapV2Router01.addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256).amountBDesired (lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol#11)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
safeconsole.slitherConstructorConstantVariables() (lib/forge-std/src/safeconsole.sol#6-13248) uses literals with too many digits:
	- CONSOLE_ADDR = 0x000000000000000000000000000000000000000000636F6e736F6c652e6c6f67 (lib/forge-std/src/safeconsole.sol#7)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
The following unused import(s) in lib/forge-std/src/StdCheats.sol should be removed: 
	-import {console2} from "./console2.sol"; (lib/forge-std/src/StdCheats.sol#7)
The following unused import(s) in lib/forge-std/src/Test.sol should be removed: 
	- {stdMath} from "./StdMath.sol";
impor (lib/forge-std/src/Test.sol#19)
	- {console} from "./console.sol";
impor (lib/forge-std/src/Test.sol#10)
	- {StdStorage, stdStorage} from "./StdStorage.sol";
impor (lib/forge-std/src/Test.sol#20)
	- {StdStyle} from "./StdStyle.sol";
impor (lib/forge-std/src/Test.sol#21)
	- {console2} from "./console2.sol";
impor (lib/forge-std/src/Test.sol#11)
	- {stdError} from "./StdError.sol";
impor (lib/forge-std/src/Test.sol#16)
	- {stdToml} from "./StdToml.sol";
impor (lib/forge-std/src/Test.sol#22)
	- {safeconsole} from "./safeconsole.sol";
impor (lib/forge-std/src/Test.sol#12)
	- {stdJson} from "./StdJson.sol";
impor (lib/forge-std/src/Test.sol#18)
	- {Vm} from "./Vm.sol";

// 📦 (lib/forge-std/src/Test.sol#24)
The following unused import(s) in lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol should be removed: 
	-import {IERC20Permit} from "../extensions/IERC20Permit.sol"; (lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol#7)
The following unused import(s) in src/TokenTemplate1.sol should be removed: 
	-import {console, console2} from "forge-std/Test.sol"; (src/TokenTemplate1.sol#13)
The following unused import(s) in src/GiveUp_129.sol should be removed: 
	-import {console, console2} from "forge-std/Test.sol"; (src/GiveUp_129.sol#36)
The following unused import(s) in src/lib/GLib_Base1.sol should be removed: 
	-import "@openzeppelin/contracts/token/ERC20/ERC20.sol"; (src/lib/GLib_Base1.sol#13)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-imports
INFO:Detectors:
CommonBase.CONSOLE (lib/forge-std/src/Base.sol#11) is never used in Test (lib/forge-std/src/Test.sol#30-33)
CommonBase.CREATE2_FACTORY (lib/forge-std/src/Base.sol#13) is never used in Test (lib/forge-std/src/Test.sol#30-33)
CommonBase.DEFAULT_SENDER (lib/forge-std/src/Base.sol#15) is never used in Test (lib/forge-std/src/Test.sol#30-33)
CommonBase.DEFAULT_TEST_CONTRACT (lib/forge-std/src/Base.sol#17) is never used in Test (lib/forge-std/src/Test.sol#30-33)
CommonBase.MULTICALL3_ADDRESS (lib/forge-std/src/Base.sol#19) is never used in Test (lib/forge-std/src/Test.sol#30-33)
CommonBase.SECP256K1_ORDER (lib/forge-std/src/Base.sol#21-22) is never used in Test (lib/forge-std/src/Test.sol#30-33)
CommonBase.UINT256_MAX (lib/forge-std/src/Base.sol#24-25) is never used in Test (lib/forge-std/src/Test.sol#30-33)
CommonBase.vm (lib/forge-std/src/Base.sol#27) is never used in Test (lib/forge-std/src/Test.sol#30-33)
CommonBase.stdstore (lib/forge-std/src/Base.sol#28) is never used in Test (lib/forge-std/src/Test.sol#30-33)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
Test.IS_TEST (lib/forge-std/src/Test.sol#32) should be constant 
TokenTemplate1.uniswapV2Factory (src/TokenTemplate1.sol#85) should be constant 
TokenTemplate1.uniswapV2Router02 (src/TokenTemplate1.sol#86) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
ContributionNFT.tokenTemplate1 (src/ContributionNFT.sol#14) should be immutable 
TokenTemplate1.giveUpMainContract (src/TokenTemplate1.sol#47) should be immutable 
TokenTemplate1.pair (src/TokenTemplate1.sol#88) should be immutable 
TokenTemplate1.totalBackers (src/TokenTemplate1.sol#82) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:. analyzed (79 contracts with 95 detectors), 850 result(s) found
